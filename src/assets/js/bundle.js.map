{"version":3,"file":"bundle.js","mappings":";mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCmBxB,MAiEMC,EAAsB,SAAUC,GAElC,MAAMC,EAAM,GACZ,IAAIC,EAAI,EACR,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAK,CACjC,IAAIE,EAAIL,EAAIM,WAAWH,GACnBE,EAAI,IACJJ,EAAIC,KAAOG,EAENA,EAAI,MACTJ,EAAIC,KAAQG,GAAK,EAAK,IACtBJ,EAAIC,KAAY,GAAJG,EAAU,KAEA,QAAZ,MAAJA,IACNF,EAAI,EAAIH,EAAII,QACyB,QAAZ,MAAxBJ,EAAIM,WAAWH,EAAI,KAEpBE,EAAI,QAAgB,KAAJA,IAAe,KAA6B,KAAtBL,EAAIM,aAAaH,IACvDF,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,GAAM,GAAM,IAC9BJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,MAGtBJ,EAAIC,KAAQG,GAAK,GAAM,IACvBJ,EAAIC,KAASG,GAAK,EAAK,GAAM,IAC7BJ,EAAIC,KAAY,GAAJG,EAAU,IAE9B,CACA,OAAOJ,CACX,EAyCMM,EAAS,CAIXC,eAAgB,KAIhBC,eAAgB,KAKhBC,sBAAuB,KAKvBC,sBAAuB,KAKvBC,kBAAmB,iEAIfC,mBACA,OAAOlB,KAAKiB,kBAAoB,KACpC,EAIIE,2BACA,OAAOnB,KAAKiB,kBAAoB,KACpC,EAQAG,mBAAoC,mBAATC,KAU3BC,gBAAgBC,EAAOC,GACnB,IAAKC,MAAMC,QAAQH,GACf,MAAMI,MAAM,iDAEhB3B,KAAK4B,QACL,MAAMC,EAAgBL,EAChBxB,KAAKe,sBACLf,KAAKa,eACLiB,EAAS,GACf,IAAK,IAAItB,EAAI,EAAGA,EAAIe,EAAMd,OAAQD,GAAK,EAAG,CACtC,MAAMuB,EAAQR,EAAMf,GACdwB,EAAYxB,EAAI,EAAIe,EAAMd,OAC1BwB,EAAQD,EAAYT,EAAMf,EAAI,GAAK,EACnC0B,EAAY1B,EAAI,EAAIe,EAAMd,OAC1B0B,EAAQD,EAAYX,EAAMf,EAAI,GAAK,EACnC4B,EAAWL,GAAS,EACpBM,GAAqB,EAARN,IAAiB,EAAME,GAAS,EACnD,IAAIK,GAAqB,GAARL,IAAiB,EAAME,GAAS,EAC7CI,EAAmB,GAARJ,EACVD,IACDK,EAAW,GACNP,IACDM,EAAW,KAGnBR,EAAOU,KAAKX,EAAcO,GAAWP,EAAcQ,GAAWR,EAAcS,GAAWT,EAAcU,GACzG,CACA,OAAOT,EAAOW,KAAK,GACvB,EASAC,aAAanB,EAAOC,GAGhB,OAAIxB,KAAKoB,qBAAuBI,EACrBmB,KAAKpB,GAETvB,KAAKsB,gBAAgBlB,EAAoBmB,GAAQC,EAC5D,EASAoB,aAAarB,EAAOC,GAGhB,OAAIxB,KAAKoB,qBAAuBI,EACrBH,KAAKE,GAhJE,SAAUsB,GAEhC,MAAMvC,EAAM,GACZ,IAAIwC,EAAM,EAAGpC,EAAI,EACjB,KAAOoC,EAAMD,EAAMpC,QAAQ,CACvB,MAAMsC,EAAKF,EAAMC,KACjB,GAAIC,EAAK,IACLzC,EAAII,KAAOsC,OAAOC,aAAaF,QAE9B,GAAIA,EAAK,KAAOA,EAAK,IAAK,CAC3B,MAAMG,EAAKL,EAAMC,KACjBxC,EAAII,KAAOsC,OAAOC,cAAoB,GAALF,IAAY,EAAW,GAALG,EACvD,MACK,GAAIH,EAAK,KAAOA,EAAK,IAAK,CAE3B,MAGMI,IAAY,EAALJ,IAAW,IAAa,GAH1BF,EAAMC,OAG2B,IAAa,GAF9CD,EAAMC,OAE+C,EAAW,GADhED,EAAMC,MAEb,MACJxC,EAAII,KAAOsC,OAAOC,aAAa,OAAUE,GAAK,KAC9C7C,EAAII,KAAOsC,OAAOC,aAAa,OAAc,KAAJE,GAC7C,KACK,CACD,MAAMD,EAAKL,EAAMC,KACXM,EAAKP,EAAMC,KACjBxC,EAAII,KAAOsC,OAAOC,cAAoB,GAALF,IAAY,IAAa,GAALG,IAAY,EAAW,GAALE,EAC3E,CACJ,CACA,OAAO9C,EAAImC,KAAK,GACpB,CAoHeY,CAAkBrD,KAAKsD,wBAAwB/B,EAAOC,GACjE,EAgBA8B,wBAAwB/B,EAAOC,GAC3BxB,KAAK4B,QACL,MAAM2B,EAAgB/B,EAChBxB,KAAKgB,sBACLhB,KAAKc,eACLgB,EAAS,GACf,IAAK,IAAItB,EAAI,EAAGA,EAAIe,EAAMd,QAAS,CAC/B,MAAMsB,EAAQwB,EAAchC,EAAMiC,OAAOhD,MAEnCyB,EADYzB,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,IACzDA,EACF,MACM2B,EADY3B,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,KACzDA,EACF,MACMiD,EADYjD,EAAIe,EAAMd,OACF8C,EAAchC,EAAMiC,OAAOhD,IAAM,GAE3D,KADEA,EACW,MAATuB,GAA0B,MAATE,GAA0B,MAATE,GAA0B,MAATsB,EACnD,MAAM,IAAIC,EAEd,MAAMtB,EAAYL,GAAS,EAAME,GAAS,EAE1C,GADAH,EAAOU,KAAKJ,GACE,KAAVD,EAAc,CACd,MAAME,EAAaJ,GAAS,EAAK,IAASE,GAAS,EAEnD,GADAL,EAAOU,KAAKH,GACE,KAAVoB,EAAc,CACd,MAAMnB,EAAaH,GAAS,EAAK,IAAQsB,EACzC3B,EAAOU,KAAKF,EAChB,CACJ,CACJ,CACA,OAAOR,CACX,EAMAF,QACI,IAAK5B,KAAKa,eAAgB,CACtBb,KAAKa,eAAiB,CAAC,EACvBb,KAAKc,eAAiB,CAAC,EACvBd,KAAKe,sBAAwB,CAAC,EAC9Bf,KAAKgB,sBAAwB,CAAC,EAE9B,IAAK,IAAIR,EAAI,EAAGA,EAAIR,KAAKkB,aAAaT,OAAQD,IAC1CR,KAAKa,eAAeL,GAAKR,KAAKkB,aAAasC,OAAOhD,GAClDR,KAAKc,eAAed,KAAKa,eAAeL,IAAMA,EAC9CR,KAAKe,sBAAsBP,GAAKR,KAAKmB,qBAAqBqC,OAAOhD,GACjER,KAAKgB,sBAAsBhB,KAAKe,sBAAsBP,IAAMA,EAExDA,GAAKR,KAAKiB,kBAAkBR,SAC5BT,KAAKc,eAAed,KAAKmB,qBAAqBqC,OAAOhD,IAAMA,EAC3DR,KAAKgB,sBAAsBhB,KAAKkB,aAAasC,OAAOhD,IAAMA,EAGtE,CACJ,GAKJ,MAAMkD,UAAgC/B,MAClCgC,cACIC,SAASC,WACT7D,KAAK8D,KAAO,yBAChB,EAKJ,MAQMC,EAAgC,SAAU1D,GAE5C,OAViB,SAAUA,GAC3B,MAAM2D,EAAY5D,EAAoBC,GACtC,OAAOO,EAAOU,gBAAgB0C,GAAW,EAC7C,CAOWC,CAAa5D,GAAK6D,QAAQ,MAAO,GAC5C,EAuLMC,EAAc,KAChB,IACI,OAxER,WACI,GAAoB,oBAATC,KACP,OAAOA,KAEX,GAAsB,oBAAXjE,OACP,OAAOA,OAEX,QAAsB,IAAX,EAAAL,EACP,OAAO,EAAAA,EAEX,MAAM,IAAI6B,MAAM,kCACpB,CAkBoC0C,GAAYC,uBASb,MAC/B,GAAuB,oBAAZC,cAAkD,IAAhBA,QAAQC,IACjD,OAEJ,MAAMC,EAAqBF,QAAQC,IAAIF,sBACvC,OAAIG,EACOC,KAAKC,MAAMF,QADtB,CAEA,EA4BQG,IA1BkB,MAC1B,GAAwB,oBAAbC,SACP,OAEJ,IAAIC,EACJ,IACIA,EAAQD,SAASE,OAAOD,MAAM,gCAClC,CACA,MAAO5E,GAGH,MACJ,CACA,MAAM8E,EAAUF,GAnKC,SAAUzE,GAC3B,IACI,OAAOO,EAAOgC,aAAavC,GAAK,EACpC,CACA,MAAOH,GACH+E,QAAQC,MAAM,wBAAyBhF,EAC3C,CACA,OAAO,IACX,CA2J6BiF,CAAaL,EAAM,IAC5C,OAAOE,GAAWN,KAAKC,MAAMK,EAAQ,EAa7BI,EACR,CACA,MAAOlF,GAQH,YADA+E,QAAQI,KAAK,+CAA+CnF,IAEhE,GAsCEoF,EAAsB,KAAQ,IAAIC,EAAI,OAAgC,QAAxBA,EAAKpB,WAAkC,IAAPoB,OAAgB,EAASA,EAAGC,MAAM,EAwBtH,MAAMC,EACF9B,cACI3D,KAAK0F,OAAS,OACd1F,KAAK2F,QAAU,OACf3F,KAAK4F,QAAU,IAAIC,SAAQ,CAACF,EAASD,KACjC1F,KAAK2F,QAAUA,EACf3F,KAAK0F,OAASA,CAAM,GAE5B,CAMAI,aAAaC,GACT,MAAO,CAACb,EAAOc,KACPd,EACAlF,KAAK0F,OAAOR,GAGZlF,KAAK2F,QAAQK,GAEO,mBAAbD,IAGP/F,KAAK4F,QAAQK,OAAM,SAGK,IAApBF,EAAStF,OACTsF,EAASb,GAGTa,EAASb,EAAOc,GAExB,CAER,EAwRJ,MAAME,UAAsBvE,MACxBgC,YAEAwC,EAAMC,EAENC,GACIzC,MAAMwC,GACNpG,KAAKmG,KAAOA,EACZnG,KAAKqG,WAAaA,EAElBrG,KAAK8D,KAbM,gBAgBXwC,OAAOC,eAAevG,KAAMkG,EAAcM,WAGtC7E,MAAM8E,mBACN9E,MAAM8E,kBAAkBzG,KAAM0G,EAAaF,UAAUG,OAE7D,EAEJ,MAAMD,EACF/C,YAAYiD,EAASC,EAAaC,GAC9B9G,KAAK4G,QAAUA,EACf5G,KAAK6G,YAAcA,EACnB7G,KAAK8G,OAASA,CAClB,CACAH,OAAOR,KAASY,GACZ,MAAMV,EAAaU,EAAK,IAAM,CAAC,EACzBC,EAAW,GAAGhH,KAAK4G,WAAWT,IAC9Bc,EAAWjH,KAAK8G,OAAOX,GACvBC,EAAUa,EAOxB,SAAyBA,EAAUF,GAC/B,OAAOE,EAAS/C,QAAQgD,GAAS,CAACC,EAAGC,KACjC,MAAMpB,EAAQe,EAAKK,GACnB,OAAgB,MAATpB,EAAgBhD,OAAOgD,GAAS,IAAIoB,KAAO,GAE1D,CAZmCC,CAAgBJ,EAAUZ,GAAc,QAE7DiB,EAAc,GAAGtH,KAAK6G,gBAAgBT,MAAYY,MAExD,OADc,IAAId,EAAcc,EAAUM,EAAajB,EAE3D,EAQJ,MAAMa,EAAU,gBAkMhB,SAASK,EAAUC,EAAGC,GAClB,GAAID,IAAMC,EACN,OAAO,EAEX,MAAMC,EAAQpB,OAAOqB,KAAKH,GACpBI,EAAQtB,OAAOqB,KAAKF,GAC1B,IAAK,MAAMI,KAAKH,EAAO,CACnB,IAAKE,EAAME,SAASD,GAChB,OAAO,EAEX,MAAME,EAAQP,EAAEK,GACVG,EAAQP,EAAEI,GAChB,GAAII,EAASF,IAAUE,EAASD,IAC5B,IAAKT,EAAUQ,EAAOC,GAClB,OAAO,OAGV,GAAID,IAAUC,EACf,OAAO,CAEf,CACA,IAAK,MAAMH,KAAKD,EACZ,IAAKF,EAAMI,SAASD,GAChB,OAAO,EAGf,OAAO,CACX,CACA,SAASI,EAASC,GACd,OAAiB,OAAVA,GAAmC,iBAAVA,CACpC,CA23BA,SAAS,EAAmBtB,GACxB,OAAIA,GAAWA,EAAQuB,UACZvB,EAAQuB,UAGRvB,CAEf,CCvjEA,MAAMwB,EAOFzE,YAAYG,EAAMuE,EAAiBC,GAC/BtI,KAAK8D,KAAOA,EACZ9D,KAAKqI,gBAAkBA,EACvBrI,KAAKsI,KAAOA,EACZtI,KAAKuI,mBAAoB,EAIzBvI,KAAKwI,aAAe,CAAC,EACrBxI,KAAKyI,kBAAoB,OACzBzI,KAAK0I,kBAAoB,IAC7B,CACAC,qBAAqBC,GAEjB,OADA5I,KAAKyI,kBAAoBG,EAClB5I,IACX,CACA6I,qBAAqBN,GAEjB,OADAvI,KAAKuI,kBAAoBA,EAClBvI,IACX,CACA8I,gBAAgBC,GAEZ,OADA/I,KAAKwI,aAAeO,EACb/I,IACX,CACAgJ,2BAA2BjD,GAEvB,OADA/F,KAAK0I,kBAAoB3C,EAClB/F,IACX,EAmBJ,MAAMiJ,EAAqB,YAsB3B,MAAMC,EACFvF,YAAYG,EAAMqF,GACdnJ,KAAK8D,KAAOA,EACZ9D,KAAKmJ,UAAYA,EACjBnJ,KAAKoJ,UAAY,KACjBpJ,KAAKqJ,UAAY,IAAIC,IACrBtJ,KAAKuJ,kBAAoB,IAAID,IAC7BtJ,KAAKwJ,iBAAmB,IAAIF,IAC5BtJ,KAAKyJ,gBAAkB,IAAIH,GAC/B,CAKAI,IAAIC,GAEA,MAAMC,EAAuB5J,KAAK6J,4BAA4BF,GAC9D,IAAK3J,KAAKuJ,kBAAkBO,IAAIF,GAAuB,CACnD,MAAMG,EAAW,IAAItE,EAErB,GADAzF,KAAKuJ,kBAAkBS,IAAIJ,EAAsBG,GAC7C/J,KAAKiK,cAAcL,IACnB5J,KAAKkK,uBAEL,IACI,MAAMC,EAAWnK,KAAKoK,uBAAuB,CACzCC,mBAAoBT,IAEpBO,GACAJ,EAASpE,QAAQwE,EAEzB,CACA,MAAOjK,GAGP,CAER,CACA,OAAOF,KAAKuJ,kBAAkBG,IAAIE,GAAsBhE,OAC5D,CACA0E,aAAaC,GACT,IAAIhF,EAEJ,MAAMqE,EAAuB5J,KAAK6J,4BAA4BU,aAAyC,EAASA,EAAQZ,YAClHa,EAAyF,QAA7EjF,EAAKgF,aAAyC,EAASA,EAAQC,gBAA6B,IAAPjF,GAAgBA,EACvH,IAAIvF,KAAKiK,cAAcL,KACnB5J,KAAKkK,uBAeJ,CAED,GAAIM,EACA,OAAO,KAGP,MAAM7I,MAAM,WAAW3B,KAAK8D,wBAEpC,CAtBI,IACI,OAAO9D,KAAKoK,uBAAuB,CAC/BC,mBAAoBT,GAE5B,CACA,MAAO1J,GACH,GAAIsK,EACA,OAAO,KAGP,MAAMtK,CAEd,CAWR,CACAuK,eACI,OAAOzK,KAAKoJ,SAChB,CACAsB,aAAatB,GACT,GAAIA,EAAUtF,OAAS9D,KAAK8D,KACxB,MAAMnC,MAAM,yBAAyByH,EAAUtF,qBAAqB9D,KAAK8D,SAE7E,GAAI9D,KAAKoJ,UACL,MAAMzH,MAAM,iBAAiB3B,KAAK8D,kCAItC,GAFA9D,KAAKoJ,UAAYA,EAEZpJ,KAAKkK,uBAAV,CAIA,GAwKR,SAA0Bd,GACtB,MAAuC,UAAhCA,EAAUX,iBACrB,CA1KYkC,CAAiBvB,GACjB,IACIpJ,KAAKoK,uBAAuB,CAAEC,mBAAoBpB,GACtD,CACA,MAAO/I,GAKP,CAKJ,IAAK,MAAOmK,EAAoBO,KAAqB5K,KAAKuJ,kBAAkBsB,UAAW,CACnF,MAAMjB,EAAuB5J,KAAK6J,4BAA4BQ,GAC9D,IAEI,MAAMF,EAAWnK,KAAKoK,uBAAuB,CACzCC,mBAAoBT,IAExBgB,EAAiBjF,QAAQwE,EAC7B,CACA,MAAOjK,GAGP,CACJ,CA7BA,CA8BJ,CACA4K,cAAcnB,EAAaV,GACvBjJ,KAAKuJ,kBAAkBwB,OAAOpB,GAC9B3J,KAAKwJ,iBAAiBuB,OAAOpB,GAC7B3J,KAAKqJ,UAAU0B,OAAOpB,EAC1B,CAGAqB,eACI,MAAMC,EAAWxJ,MAAMyJ,KAAKlL,KAAKqJ,UAAU8B,gBACrCtF,QAAQuF,IAAI,IACXH,EACEI,QAAOzE,GAAW,aAAcA,IAEhC0E,KAAI1E,GAAWA,EAAQ2E,SAASR,cAClCE,EACEI,QAAOzE,GAAW,YAAaA,IAE/B0E,KAAI1E,GAAWA,EAAQ4E,aAEpC,CACAC,iBACI,OAAyB,MAAlBzL,KAAKoJ,SAChB,CACAa,cAAcN,EAAaV,GACvB,OAAOjJ,KAAKqJ,UAAUS,IAAIH,EAC9B,CACA+B,WAAW/B,EAAaV,GACpB,OAAOjJ,KAAKwJ,iBAAiBE,IAAIC,IAAe,CAAC,CACrD,CACAgC,WAAWC,EAAO,CAAC,GACf,MAAM,QAAErB,EAAU,CAAC,GAAMqB,EACnBhC,EAAuB5J,KAAK6J,4BAA4B+B,EAAKvB,oBACnE,GAAIrK,KAAKiK,cAAcL,GACnB,MAAMjI,MAAM,GAAG3B,KAAK8D,QAAQ8F,mCAEhC,IAAK5J,KAAKyL,iBACN,MAAM9J,MAAM,aAAa3B,KAAK8D,oCAElC,MAAMqG,EAAWnK,KAAKoK,uBAAuB,CACzCC,mBAAoBT,EACpBW,YAGJ,IAAK,MAAOF,EAAoBO,KAAqB5K,KAAKuJ,kBAAkBsB,UAEpEjB,IADiC5J,KAAK6J,4BAA4BQ,IAElEO,EAAiBjF,QAAQwE,GAGjC,OAAOA,CACX,CASA0B,OAAO9F,EAAU4D,GACb,IAAIpE,EACJ,MAAMqE,EAAuB5J,KAAK6J,4BAA4BF,GACxDmC,EAA8E,QAAzDvG,EAAKvF,KAAKyJ,gBAAgBC,IAAIE,UAA0C,IAAPrE,EAAgBA,EAAK,IAAIwG,IACrHD,EAAkBE,IAAIjG,GACtB/F,KAAKyJ,gBAAgBO,IAAIJ,EAAsBkC,GAC/C,MAAMG,EAAmBjM,KAAKqJ,UAAUK,IAAIE,GAI5C,OAHIqC,GACAlG,EAASkG,EAAkBrC,GAExB,KACHkC,EAAkBf,OAAOhF,EAAS,CAE1C,CAKAmG,sBAAsB/B,EAAUR,GAC5B,MAAMwC,EAAYnM,KAAKyJ,gBAAgBC,IAAIC,GAC3C,GAAKwC,EAGL,IAAK,MAAMpG,KAAYoG,EACnB,IACIpG,EAASoE,EAAUR,EACvB,CACA,MAAOpE,GAEP,CAER,CACA6E,wBAAuB,mBAAEC,EAAkB,QAAEE,EAAU,CAAC,IACpD,IAAIJ,EAAWnK,KAAKqJ,UAAUK,IAAIW,GAClC,IAAKF,GAAYnK,KAAKoJ,YAClBe,EAAWnK,KAAKoJ,UAAUf,gBAAgBrI,KAAKmJ,UAAW,CACtDkB,oBAyCuBV,EAzC2BU,EA0CvDV,IAAeV,OAAqBmD,EAAYzC,GAzC3CY,YAEJvK,KAAKqJ,UAAUW,IAAIK,EAAoBF,GACvCnK,KAAKwJ,iBAAiBQ,IAAIK,EAAoBE,GAM9CvK,KAAKkM,sBAAsB/B,EAAUE,GAMjCrK,KAAKoJ,UAAUV,mBACf,IACI1I,KAAKoJ,UAAUV,kBAAkB1I,KAAKmJ,UAAWkB,EAAoBF,EACzE,CACA,MAAO5E,GAEP,CAmBhB,IAAuCoE,EAhB/B,OAAOQ,GAAY,IACvB,CACAN,4BAA4BF,EAAaV,GACrC,OAAIjJ,KAAKoJ,UACEpJ,KAAKoJ,UAAUb,kBAAoBoB,EAAaV,EAGhDU,CAEf,CACAO,uBACI,QAAUlK,KAAKoJ,WAC0B,aAArCpJ,KAAKoJ,UAAUX,iBACvB,EA6BJ,MAAM4D,EACF1I,YAAYG,GACR9D,KAAK8D,KAAOA,EACZ9D,KAAKsM,UAAY,IAAIhD,GACzB,CAUAiD,aAAanD,GACT,MAAMoD,EAAWxM,KAAKyM,YAAYrD,EAAUtF,MAC5C,GAAI0I,EAASf,iBACT,MAAM,IAAI9J,MAAM,aAAayH,EAAUtF,yCAAyC9D,KAAK8D,QAEzF0I,EAAS9B,aAAatB,EAC1B,CACAsD,wBAAwBtD,GACHpJ,KAAKyM,YAAYrD,EAAUtF,MAC/B2H,kBAETzL,KAAKsM,UAAUvB,OAAO3B,EAAUtF,MAEpC9D,KAAKuM,aAAanD,EACtB,CAQAqD,YAAY3I,GACR,GAAI9D,KAAKsM,UAAUxC,IAAIhG,GACnB,OAAO9D,KAAKsM,UAAU5C,IAAI5F,GAG9B,MAAM0I,EAAW,IAAItD,EAASpF,EAAM9D,MAEpC,OADAA,KAAKsM,UAAUtC,IAAIlG,EAAM0I,GAClBA,CACX,CACAG,eACI,OAAOlL,MAAMyJ,KAAKlL,KAAKsM,UAAUnB,SACrC,ECjYJ,MAAM9B,EAAY,GAYlB,IAAIuD,GACJ,SAAWA,GACPA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAiB,OAAI,GAAK,QACtC,CAPD,CAOGA,IAAaA,EAAW,CAAC,IAC5B,MAAMC,EAAoB,CACtB,MAASD,EAASE,MAClB,QAAWF,EAASG,QACpB,KAAQH,EAASI,KACjB,KAAQJ,EAASK,KACjB,MAASL,EAASM,MAClB,OAAUN,EAASO,QAKjBC,EAAkBR,EAASI,KAO3BK,EAAgB,CAClB,CAACT,EAASE,OAAQ,MAClB,CAACF,EAASG,SAAU,MACpB,CAACH,EAASI,MAAO,OACjB,CAACJ,EAASK,MAAO,OACjB,CAACL,EAASM,OAAQ,SAOhBI,EAAoB,CAACnD,EAAUoD,KAAYC,KAC7C,GAAID,EAAUpD,EAASsD,SACnB,OAEJ,MAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAASR,EAAcE,GAC7B,IAAIM,EAIA,MAAM,IAAIlM,MAAM,8DAA8D4L,MAH9EtI,QAAQ4I,GAAQ,IAAIH,OAASvD,EAASrG,WAAY0J,EAItD,ECjFEM,EAAgB,CAACC,EAAQC,IAAiBA,EAAaC,MAAMvN,GAAMqN,aAAkBrN,IAE3F,IAAIwN,EACAC,EAqBJ,MAAMC,EAAmB,IAAIC,QACvBC,EAAqB,IAAID,QACzBE,EAA2B,IAAIF,QAC/BG,EAAiB,IAAIH,QACrBI,EAAwB,IAAIJ,QA0DlC,IAAIK,EAAgB,CAChBhF,IAAIiF,EAAQC,EAAMC,GACd,GAAIF,aAAkBG,eAAgB,CAElC,GAAa,SAATF,EACA,OAAON,EAAmB5E,IAAIiF,GAElC,GAAa,qBAATC,EACA,OAAOD,EAAOI,kBAAoBR,EAAyB7E,IAAIiF,GAGnE,GAAa,UAATC,EACA,OAAOC,EAASE,iBAAiB,QAC3B3C,EACAyC,EAASG,YAAYH,EAASE,iBAAiB,GAE7D,CAEA,OAAO,EAAKJ,EAAOC,GACvB,EACA5E,IAAG,CAAC2E,EAAQC,EAAM5I,KACd2I,EAAOC,GAAQ5I,GACR,GAEX8D,IAAG,CAAC6E,EAAQC,IACJD,aAAkBG,iBACR,SAATF,GAA4B,UAATA,IAGjBA,KAAQD,GAqCvB,SAASM,EAAuBjJ,GAC5B,MAAqB,mBAAVA,GAhCOkJ,EAiCMlJ,KA7BXmJ,YAAY3I,UAAU4I,aAC7B,qBAAsBN,eAAetI,WA7GnC2H,IACHA,EAAuB,CACpBkB,UAAU7I,UAAU8I,QACpBD,UAAU7I,UAAU+I,SACpBF,UAAU7I,UAAUgJ,sBAqHE1H,SAASoH,GAC5B,YAAa1B,GAIhB,OADA0B,EAAKO,MAAMC,EAAO1P,MAAOwN,GAClB,EAAKY,EAAiB1E,IAAI1J,MACrC,EAEG,YAAawN,GAGhB,OAAO,EAAK0B,EAAKO,MAAMC,EAAO1P,MAAOwN,GACzC,EAvBW,SAAUmC,KAAenC,GAC5B,MAAMoC,EAAKV,EAAKW,KAAKH,EAAO1P,MAAO2P,KAAenC,GAElD,OADAe,EAAyBvE,IAAI4F,EAAID,EAAWG,KAAOH,EAAWG,OAAS,CAACH,IACjE,EAAKC,EAChB,GA0BA5J,aAAiB8I,gBAhGzB,SAAwCc,GAEpC,GAAItB,EAAmBxE,IAAI8F,GACvB,OACJ,MAAMG,EAAO,IAAIlK,SAAQ,CAACF,EAASD,KAC/B,MAAMsK,EAAW,KACbJ,EAAGK,oBAAoB,WAAYC,GACnCN,EAAGK,oBAAoB,QAAS/K,GAChC0K,EAAGK,oBAAoB,QAAS/K,EAAM,EAEpCgL,EAAW,KACbvK,IACAqK,GAAU,EAER9K,EAAQ,KACVQ,EAAOkK,EAAG1K,OAAS,IAAIiL,aAAa,aAAc,eAClDH,GAAU,EAEdJ,EAAGQ,iBAAiB,WAAYF,GAChCN,EAAGQ,iBAAiB,QAASlL,GAC7B0K,EAAGQ,iBAAiB,QAASlL,EAAM,IAGvCoJ,EAAmBtE,IAAI4F,EAAIG,EAC/B,CAyEQM,CAA+BrK,GAC/B8H,EAAc9H,EAzJVkI,IACHA,EAAoB,CACjBiB,YACAmB,eACAC,SACAlB,UACAP,kBAoJG,IAAI0B,MAAMxK,EAAO0I,GAErB1I,GAzCX,IAAsBkJ,CA0CtB,CACA,SAAS,EAAKlJ,GAGV,GAAIA,aAAiByK,WACjB,OA3IR,SAA0BC,GACtB,MAAM9K,EAAU,IAAIC,SAAQ,CAACF,EAASD,KAClC,MAAMsK,EAAW,KACbU,EAAQT,oBAAoB,UAAWU,GACvCD,EAAQT,oBAAoB,QAAS/K,EAAM,EAEzCyL,EAAU,KACZhL,EAAQ,EAAK+K,EAAQE,SACrBZ,GAAU,EAER9K,EAAQ,KACVQ,EAAOgL,EAAQxL,OACf8K,GAAU,EAEdU,EAAQN,iBAAiB,UAAWO,GACpCD,EAAQN,iBAAiB,QAASlL,EAAM,IAe5C,OAbAU,EACKiL,MAAM7K,IAGHA,aAAiBqJ,WACjBjB,EAAiBpE,IAAIhE,EAAO0K,EAChC,IAGCzK,OAAM,SAGXwI,EAAsBzE,IAAIpE,EAAS8K,GAC5B9K,CACX,CA4GekL,CAAiB9K,GAG5B,GAAIwI,EAAe1E,IAAI9D,GACnB,OAAOwI,EAAe9E,IAAI1D,GAC9B,MAAM+K,EAAW9B,EAAuBjJ,GAOxC,OAJI+K,IAAa/K,IACbwI,EAAexE,IAAIhE,EAAO+K,GAC1BtC,EAAsBzE,IAAI+G,EAAU/K,IAEjC+K,CACX,CACA,MAAMrB,EAAU1J,GAAUyI,EAAsB/E,IAAI1D,GCrI9CgL,EAAc,CAAC,MAAO,SAAU,SAAU,aAAc,SACxDC,EAAe,CAAC,MAAO,MAAO,SAAU,SACxCC,EAAgB,IAAI5H,IAC1B,SAAS6H,EAAUxC,EAAQC,GACvB,KAAMD,aAAkBQ,cAClBP,KAAQD,GACM,iBAATC,EACP,OAEJ,GAAIsC,EAAcxH,IAAIkF,GAClB,OAAOsC,EAAcxH,IAAIkF,GAC7B,MAAMwC,EAAiBxC,EAAK1K,QAAQ,aAAc,IAC5CmN,EAAWzC,IAASwC,EACpBE,EAAUL,EAAanJ,SAASsJ,GACtC,KAEEA,KAAmBC,EAAWd,SAAWD,gBAAgB9J,aACrD8K,IAAWN,EAAYlJ,SAASsJ,GAClC,OAEJ,MAAMvD,EAAS7C,eAAgBuG,KAAc/D,GAEzC,MAAMoC,EAAK5P,KAAKoP,YAAYmC,EAAWD,EAAU,YAAc,YAC/D,IAAI3C,EAASiB,EAAG4B,MAQhB,OAPIH,IACA1C,EAASA,EAAO8C,MAAMjE,EAAKkE,iBAMjB7L,QAAQuF,IAAI,CACtBuD,EAAOyC,MAAmB5D,GAC1B8D,GAAW1B,EAAGG,QACd,EACR,EAEA,OADAmB,EAAclH,IAAI4E,EAAMf,GACjBA,CACX,CACa,IAAC8D,ID+BejD,EAAzBA,EC/BuB,IACpBiD,EACHjI,IAAK,CAACiF,EAAQC,EAAMC,IAAasC,EAAUxC,EAAQC,IAAS+C,EAASjI,IAAIiF,EAAQC,EAAMC,GACvF/E,IAAK,CAAC6E,EAAQC,MAAWuC,EAAUxC,EAAQC,IAAS+C,EAAS7H,IAAI6E,EAAQC,ICrE7E,MAAMgD,EACFjO,YAAYwF,GACRnJ,KAAKmJ,UAAYA,CACrB,CAGA0I,wBAII,OAHkB7R,KAAKmJ,UAAUwD,eAI5BrB,KAAIkB,IACL,GAoBZ,SAAkCA,GAC9B,MAAMpD,EAAYoD,EAAS/B,eAC3B,MAAkF,aAA1ErB,aAA6C,EAASA,EAAUd,KAC5E,CAvBgBwJ,CAAyBtF,GAAW,CACpC,MAAM5F,EAAU4F,EAASlC,eACzB,MAAO,GAAG1D,EAAQmL,WAAWnL,EAAQoL,SACzC,CAEI,OAAO,IACX,IAEC3G,QAAO4G,GAAaA,IACpBxP,KAAK,IACd,EAeJ,MAAMyP,EAAS,gBACTC,EAAY,QAkBZC,EAAS,IHKf,MAOIzO,YAAYG,GACR9D,KAAK8D,KAAOA,EAIZ9D,KAAKqS,UAAYjF,EAKjBpN,KAAKsS,YAAchF,EAInBtN,KAAKuS,gBAAkB,KAIvBlJ,EAAU7G,KAAKxC,KACnB,CACIyN,eACA,OAAOzN,KAAKqS,SAChB,CACI5E,aAAS+E,GACT,KAAMA,KAAO5F,GACT,MAAM,IAAI6F,UAAU,kBAAkBD,+BAE1CxS,KAAKqS,UAAYG,CACrB,CAEAE,YAAYF,GACRxS,KAAKqS,UAA2B,iBAARG,EAAmB3F,EAAkB2F,GAAOA,CACxE,CACIG,iBACA,OAAO3S,KAAKsS,WAChB,CACIK,eAAWH,GACX,GAAmB,mBAARA,EACP,MAAM,IAAIC,UAAU,qDAExBzS,KAAKsS,YAAcE,CACvB,CACII,qBACA,OAAO5S,KAAKuS,eAChB,CACIK,mBAAeJ,GACfxS,KAAKuS,gBAAkBC,CAC3B,CAIAK,SAASrF,GACLxN,KAAKuS,iBAAmBvS,KAAKuS,gBAAgBvS,KAAM4M,EAASE,SAAUU,GACtExN,KAAKsS,YAAYtS,KAAM4M,EAASE,SAAUU,EAC9C,CACAsF,OAAOtF,GACHxN,KAAKuS,iBACDvS,KAAKuS,gBAAgBvS,KAAM4M,EAASG,WAAYS,GACpDxN,KAAKsS,YAAYtS,KAAM4M,EAASG,WAAYS,EAChD,CACAnI,QAAQmI,GACJxN,KAAKuS,iBAAmBvS,KAAKuS,gBAAgBvS,KAAM4M,EAASI,QAASQ,GACrExN,KAAKsS,YAAYtS,KAAM4M,EAASI,QAASQ,EAC7C,CACAuF,QAAQvF,GACJxN,KAAKuS,iBAAmBvS,KAAKuS,gBAAgBvS,KAAM4M,EAASK,QAASO,GACrExN,KAAKsS,YAAYtS,KAAM4M,EAASK,QAASO,EAC7C,CACAtI,SAASsI,GACLxN,KAAKuS,iBAAmBvS,KAAKuS,gBAAgBvS,KAAM4M,EAASM,SAAUM,GACtExN,KAAKsS,YAAYtS,KAAM4M,EAASM,SAAUM,EAC9C,GGnFsB,iBAwEpB,EAAqB,YACrBwF,EAAsB,CACxB,CAACd,GAAS,YACV,uBAAU,mBACV,sBAAU,iBACV,6BAAU,wBACV,sBAAU,iBACV,6BAAU,wBACV,iBAAU,YACV,wBAAU,mBACV,qBAAU,YACV,4BAAU,mBACV,sBAAU,UACV,6BAAU,iBACV,0BAAU,WACV,iCAAU,kBACV,sBAAU,WACV,6BAAU,kBACV,wBAAU,YACV,+BAAU,mBACV,0BAAU,UACV,iCAAU,iBACV,oBAAU,WACV,2BAAU,kBACV,sBAAU,WACV,6BAAU,kBACV,UAAW,UACX,SAAQ,eAsBNe,EAAQ,IAAI3J,IAOZ4J,EAAc,IAAI5J,IAMxB,SAAS6J,EAAcC,EAAKhK,GACxB,IACIgK,EAAIjK,UAAUoD,aAAanD,EAC/B,CACA,MAAOlJ,GACHkS,EAAOS,MAAM,aAAazJ,EAAUtF,4CAA4CsP,EAAItP,OAAQ5D,EAChG,CACJ,CAeA,SAASmT,EAAmBjK,GACxB,MAAMkK,EAAgBlK,EAAUtF,KAChC,GAAIoP,EAAYpJ,IAAIwJ,GAEhB,OADAlB,EAAOS,MAAM,sDAAsDS,OAC5D,EAEXJ,EAAYlJ,IAAIsJ,EAAelK,GAE/B,IAAK,MAAMgK,KAAOH,EAAM9H,SACpBgI,EAAcC,EAAKhK,GAEvB,OAAO,CACX,CAuDA,MAeMmK,EAAgB,IAAI7M,EAAa,MAAO,WAf/B,CACX,SAAkC,oFAElC,eAA8C,gCAC9C,gBAAgD,kFAChD,cAA4C,kDAC5C,aAA0C,0EAC1C,uBAA8D,6EAE9D,uBAA8D,wDAC9D,WAAsC,gFACtC,UAAoC,qFACpC,UAAsC,mFACtC,aAA0C,wFAoB9C,MAAM8M,EACF7P,YAAY4G,EAAS/E,EAAQ2D,GACzBnJ,KAAKyT,YAAa,EAClBzT,KAAK0T,SAAWpN,OAAOqN,OAAO,CAAC,EAAGpJ,GAClCvK,KAAK4T,QAAUtN,OAAOqN,OAAO,CAAC,EAAGnO,GACjCxF,KAAK6T,MAAQrO,EAAO1B,KACpB9D,KAAK8T,gCACDtO,EAAOuO,+BACX/T,KAAKgU,WAAa7K,EAClBnJ,KAAKmJ,UAAUoD,aAAa,IAAInE,EAAU,OAAO,IAAMpI,MAAM,UACjE,CACI+T,qCAEA,OADA/T,KAAKiU,iBACEjU,KAAK8T,+BAChB,CACIC,mCAA+BvB,GAC/BxS,KAAKiU,iBACLjU,KAAK8T,gCAAkCtB,CAC3C,CACI1O,WAEA,OADA9D,KAAKiU,iBACEjU,KAAK6T,KAChB,CACItJ,cAEA,OADAvK,KAAKiU,iBACEjU,KAAK0T,QAChB,CACIlO,aAEA,OADAxF,KAAKiU,iBACEjU,KAAK4T,OAChB,CACIzK,gBACA,OAAOnJ,KAAKgU,UAChB,CACIE,gBACA,OAAOlU,KAAKyT,UAChB,CACIS,cAAU1B,GACVxS,KAAKyT,WAAajB,CACtB,CAKAyB,iBACI,GAAIjU,KAAKkU,UACL,MAAMX,EAAc5M,OAAO,cAA0C,CAAEwN,QAASnU,KAAK6T,OAE7F,EAyBJ,SAASO,EAAcV,EAAUW,EAAY,CAAC,GAC1C,IAAI9J,EAAUmJ,EACW,iBAAdW,IAEPA,EAAY,CAAEvQ,KADDuQ,IAGjB,MAAM7O,EAASc,OAAOqN,OAAO,CAAE7P,KAAM,EAAoBiQ,gCAAgC,GAASM,GAC5FvQ,EAAO0B,EAAO1B,KACpB,GAAoB,iBAATA,IAAsBA,EAC7B,MAAMyP,EAAc5M,OAAO,eAA4C,CACnEwN,QAASnR,OAAOc,KAIxB,GADAyG,IAAYA,EAAUjF,MACjBiF,EACD,MAAMgJ,EAAc5M,OAAO,cAE/B,MAAM2N,EAAcrB,EAAMvJ,IAAI5F,GAC9B,GAAIwQ,EAAa,CAEb,GAAI/M,EAAUgD,EAAS+J,EAAY/J,UAC/BhD,EAAU/B,EAAQ8O,EAAY9O,QAC9B,OAAO8O,EAGP,MAAMf,EAAc5M,OAAO,gBAA8C,CAAEwN,QAASrQ,GAE5F,CACA,MAAMqF,EAAY,IAAIkD,EAAmBvI,GACzC,IAAK,MAAMsF,KAAa8J,EAAY/H,SAChChC,EAAUoD,aAAanD,GAE3B,MAAMmL,EAAS,IAAIf,EAAgBjJ,EAAS/E,EAAQ2D,GAEpD,OADA8J,EAAMjJ,IAAIlG,EAAMyQ,GACTA,CACX,CAkFA,SAASC,GAAgBC,EAAkBzC,EAAS0C,GAChD,IAAInP,EAGJ,IAAIwM,EAA2D,QAAhDxM,EAAKyN,EAAoByB,UAAsC,IAAPlP,EAAgBA,EAAKkP,EACxFC,IACA3C,GAAW,IAAI2C,KAEnB,MAAMC,EAAkB5C,EAAQjN,MAAM,SAChC8P,EAAkB5C,EAAQlN,MAAM,SACtC,GAAI6P,GAAmBC,EAAiB,CACpC,MAAMC,EAAU,CACZ,+BAA+B9C,oBAA0BC,OAY7D,OAVI2C,GACAE,EAAQrS,KAAK,iBAAiBuP,sDAE9B4C,GAAmBC,GACnBC,EAAQrS,KAAK,OAEboS,GACAC,EAAQrS,KAAK,iBAAiBwP,2DAElCI,EAAOW,KAAK8B,EAAQpS,KAAK,KAE7B,CACA4Q,EAAmB,IAAIjL,EAAU,GAAG2J,aAAmB,KAAM,CAAGA,UAASC,aAAY,WACzF,CA2CA,MAAM8C,GAAU,8BACVC,GAAa,EACbC,GAAa,2BACnB,IAAIC,GAAY,KAChB,SAASC,KAoBL,OAnBKD,KACDA,GD9kBR,SAAgBnR,EAAMkO,GAAS,QAAEmD,EAAO,QAAEC,EAAO,SAAEC,EAAQ,WAAEC,GAAe,CAAC,GACzE,MAAM5E,EAAU6E,UAAUC,KAAK1R,EAAMkO,GAC/ByD,EAAc,EAAK/E,GAoBzB,OAnBI0E,GACA1E,EAAQN,iBAAiB,iBAAkBsF,IACvCN,EAAQ,EAAK1E,EAAQE,QAAS8E,EAAMC,WAAYD,EAAME,WAAY,EAAKlF,EAAQtB,aAAcsG,EAAM,IAGvGP,GACAzE,EAAQN,iBAAiB,WAAYsF,GAAUP,EAE/CO,EAAMC,WAAYD,EAAME,WAAYF,KAExCD,EACK5E,MAAMgF,IACHP,GACAO,EAAGzF,iBAAiB,SAAS,IAAMkF,MACnCD,GACAQ,EAAGzF,iBAAiB,iBAAkBsF,GAAUL,EAASK,EAAMC,WAAYD,EAAME,WAAYF,IACjG,IAECzP,OAAM,SACJwP,CACX,CCujBoBK,CAAOhB,GAASC,GAAY,CACpCK,QAAS,CAACS,EAAIF,KAOD,IADDA,GAEAE,EAAGE,kBAAkBf,GAC7B,IAEL/O,OAAM/F,IACL,MAAMqT,EAAc5M,OAAO,WAAoC,CAC3DqP,qBAAsB9V,EAAEkG,SAC1B,KAGH6O,EACX,CAqBAjK,eAAeiL,GAA2B7C,EAAK8C,GAC3C,IACI,MACMtG,SADWsF,MACH9F,YAAY4F,GAAY,aAChChG,EAAcY,EAAGZ,YAAYgG,IAEnC,aADMhG,EAAYmH,IAAID,EAAiBE,GAAWhD,IAC3CxD,EAAGG,IACd,CACA,MAAO7P,GACH,GAAIA,aAAagG,EACbkM,EAAOW,KAAK7S,EAAEkG,aAEb,CACD,MAAMiQ,EAAc9C,EAAc5M,OAAO,UAAoC,CACzEqP,qBAAsB9V,aAA6B,EAASA,EAAEkG,UAElEgM,EAAOW,KAAKsD,EAAYjQ,QAC5B,CACJ,CACJ,CACA,SAASgQ,GAAWhD,GAChB,MAAO,GAAGA,EAAItP,QAAQsP,EAAI7I,QAAQ+L,OACtC,CAqBA,MAAMC,GACF5S,YAAYwF,GACRnJ,KAAKmJ,UAAYA,EAUjBnJ,KAAKwW,iBAAmB,KACxB,MAAMpD,EAAMpT,KAAKmJ,UAAUsD,YAAY,OAAOnC,eAC9CtK,KAAKyW,SAAW,IAAIC,GAAqBtD,GACzCpT,KAAK2W,wBAA0B3W,KAAKyW,SAASG,OAAO/F,MAAKD,IACrD5Q,KAAKwW,iBAAmB5F,EACjBA,IAEf,CAQA5F,yBACI,MAKM6L,EALiB7W,KAAKmJ,UACvBsD,YAAY,mBACZnC,eAGwBuH,wBACvBiF,EAAOC,KAMb,GAL8B,OAA1B/W,KAAKwW,mBACLxW,KAAKwW,uBAAyBxW,KAAK2W,yBAInC3W,KAAKwW,iBAAiBQ,wBAA0BF,IAChD9W,KAAKwW,iBAAiBS,WAAWhJ,MAAKiJ,GAAuBA,EAAoBJ,OAASA,IAa9F,OARI9W,KAAKwW,iBAAiBS,WAAWzU,KAAK,CAAEsU,OAAMD,UAGlD7W,KAAKwW,iBAAiBS,WAAajX,KAAKwW,iBAAiBS,WAAW5L,QAAO6L,IACvE,MAAMC,EAAc,IAAIxJ,KAAKuJ,EAAoBJ,MAAMM,UAEvD,OADYzJ,KAAKD,MACJyJ,GArDqB,MAqD+B,IAE9DnX,KAAKyW,SAASY,UAAUrX,KAAKwW,iBACxC,CAQAxL,4BAKI,GAJ8B,OAA1BhL,KAAKwW,wBACCxW,KAAK2W,wBAGe,OAA1B3W,KAAKwW,kBACuC,IAA5CxW,KAAKwW,iBAAiBS,WAAWxW,OACjC,MAAO,GAEX,MAAMqW,EAAOC,MAEP,iBAAEO,EAAgB,cAAEC,GAyBlC,SAAoCC,EAAiBC,EAtG5B,MAyGrB,MAAMH,EAAmB,GAEzB,IAAIC,EAAgBC,EAAgBE,QACpC,IAAK,MAAMR,KAAuBM,EAAiB,CAE/C,MAAMG,EAAiBL,EAAiBM,MAAKC,GAAMA,EAAGhB,QAAUK,EAAoBL,QACpF,GAAKc,GAiBD,GAHAA,EAAeG,MAAMtV,KAAK0U,EAAoBJ,MAG1CiB,GAAWT,GAAoBG,EAAS,CACxCE,EAAeG,MAAME,MACrB,KACJ,OAdA,GAJAV,EAAiB9U,KAAK,CAClBqU,MAAOK,EAAoBL,MAC3BiB,MAAO,CAACZ,EAAoBJ,QAE5BiB,GAAWT,GAAoBG,EAAS,CAGxCH,EAAiBU,MACjB,KACJ,CAaJT,EAAgBA,EAAcG,MAAM,EACxC,CACA,MAAO,CACHJ,mBACAC,gBAER,CAhEoDU,CAA2BjY,KAAKwW,iBAAiBS,YACvFiB,EAAenU,EAA8BW,KAAKyT,UAAU,CAAEnG,QAAS,EAAGiF,WAAYK,KAgB5F,OAdAtX,KAAKwW,iBAAiBQ,sBAAwBF,EAC1CS,EAAc9W,OAAS,GAEvBT,KAAKwW,iBAAiBS,WAAaM,QAI7BvX,KAAKyW,SAASY,UAAUrX,KAAKwW,oBAGnCxW,KAAKwW,iBAAiBS,WAAa,GAE9BjX,KAAKyW,SAASY,UAAUrX,KAAKwW,mBAE/B0B,CACX,EAEJ,SAASnB,KAGL,OAFc,IAAIpJ,MAELC,cAAcwK,UAAU,EAAG,GAC5C,CAyCA,MAAM1B,GACF/S,YAAYyP,GACRpT,KAAKoT,IAAMA,EACXpT,KAAKqY,wBAA0BrY,KAAKsY,8BACxC,CACAtN,qCACI,QLCR,WACI,IACI,MAA4B,iBAAduK,SAClB,CACA,MAAOrV,GACH,OAAO,CACX,CACJ,CKRaqY,ILiBF,IAAI1S,SAAQ,CAACF,EAASD,KACzB,IACI,IAAI8S,GAAW,EACf,MAAMC,EAAgB,0DAChB/H,EAAUtM,KAAKmR,UAAUC,KAAKiD,GACpC/H,EAAQgI,UAAY,KAChBhI,EAAQE,OAAO+H,QAEVH,GACDpU,KAAKmR,UAAUqD,eAAeH,GAElC9S,GAAQ,EAAK,EAEjB+K,EAAQmI,gBAAkB,KACtBL,GAAW,CAAK,EAEpB9H,EAAQoI,QAAU,KACd,IAAIvT,EACJG,GAAiC,QAAxBH,EAAKmL,EAAQxL,aAA0B,IAAPK,OAAgB,EAASA,EAAGa,UAAY,GAAG,CAE5F,CACA,MAAOlB,GACHQ,EAAOR,EACX,KKnCS2L,MAAK,KAAM,IACX5K,OAAM,KAAM,GAEzB,CAIA+E,aAEI,aAD8BhL,KAAKqY,+BA7N3CrN,eAA2CoI,GACvC,IAEI,aADiB8B,MAEZ9F,YAAY4F,IACZhG,YAAYgG,IACZtL,IAAI0M,GAAWhD,GACxB,CACA,MAAOlT,GACH,GAAIA,aAAagG,EACbkM,EAAOW,KAAK7S,EAAEkG,aAEb,CACD,MAAMiQ,EAAc9C,EAAc5M,OAAO,UAAkC,CACvEqP,qBAAsB9V,aAA6B,EAASA,EAAEkG,UAElEgM,EAAOW,KAAKsD,EAAYjQ,QAC5B,CACJ,CACJ,CA+M6C2S,CAA4B/Y,KAAKoT,MAH3D,CAAE6D,WAAY,GAM7B,CAEAjM,gBAAgBgO,GACZ,IAAIzT,EAEJ,SAD8BvF,KAAKqY,wBAI9B,CACD,MAAMY,QAAiCjZ,KAAK4W,OAC5C,OAAOX,GAA2BjW,KAAKoT,IAAK,CACxC4D,sBAAyE,QAAjDzR,EAAKyT,EAAiBhC,6BAA0C,IAAPzR,EAAgBA,EAAK0T,EAAyBjC,sBAC/HC,WAAY+B,EAAiB/B,YAErC,CACJ,CAEAjM,UAAUgO,GACN,IAAIzT,EAEJ,SAD8BvF,KAAKqY,wBAI9B,CACD,MAAMY,QAAiCjZ,KAAK4W,OAC5C,OAAOX,GAA2BjW,KAAKoT,IAAK,CACxC4D,sBAAyE,QAAjDzR,EAAKyT,EAAiBhC,6BAA0C,IAAPzR,EAAgBA,EAAK0T,EAAyBjC,sBAC/HC,WAAY,IACLgC,EAAyBhC,cACzB+B,EAAiB/B,aAGhC,CACJ,EAOJ,SAASc,GAAWP,GAEhB,OAAOzT,EAEPW,KAAKyT,UAAU,CAAEnG,QAAS,EAAGiF,WAAYO,KAAoB/W,MACjE,CAmBI4S,EAAmB,IAAIjL,EAAU,mBAAmBe,GAAa,IAAIyI,EAA0BzI,IAAY,YAC3GkK,EAAmB,IAAIjL,EAAU,aAAae,GAAa,IAAIoN,GAAqBpN,IAAY,YAEhGqL,GAAgBtC,EAAQC,EAaL,IAXnBqC,GAAgBtC,EAAQC,EAAW,WAEnCqC,GAAgB,UAAW,ICl4B/BA,GAnBW,WACG,SAkBiB,OCI/B,MAAM0E,GAAe,iCAIfC,GAA4B,gBAsClC,MAAMC,WAAqBlT,EAOvBvC,YAAYwC,EAAMC,EAASiT,EAAU,GACjCzV,MAAM0V,GAAYnT,GAAO,qBAAqBC,MAAYkT,GAAYnT,OACtEnG,KAAKqZ,QAAUA,EAIfrZ,KAAKqG,WAAa,CAAEkT,eAAgB,MACpCvZ,KAAKwZ,aAAexZ,KAAKoG,QAGzBE,OAAOC,eAAevG,KAAMoZ,GAAa5S,UAC7C,CACIiT,aACA,OAAOzZ,KAAKqZ,OAChB,CACII,WAAOA,GACPzZ,KAAKqZ,QAAUI,CACnB,CAIAC,YAAYvT,GACR,OAAOmT,GAAYnT,KAAUnG,KAAKmG,IACtC,CAIIoT,qBACA,OAAOvZ,KAAKqG,WAAWkT,cAC3B,CACIA,mBAAeA,GACfvZ,KAAKqG,WAAWkT,eAAiBA,EAC7BvZ,KAAKqG,WAAWkT,eAChBvZ,KAAKoG,QAAU,GAAGpG,KAAKwZ,iBAAiBxZ,KAAKqG,WAAWkT,iBAGxDvZ,KAAKoG,QAAUpG,KAAKwZ,YAE5B,EAMJ,IAAIG,GAyeAC,GA3cJ,SAASN,GAAYnT,GACjB,MAAO,WAAaA,CACxB,CACA,SAAS0T,KAGL,OAAO,IAAIT,GAAaO,GAAiBG,QAFzB,iFAGpB,CAqBA,SAASC,KACL,OAAO,IAAIX,GAAaO,GAAiBK,qBAAsB,2DACnE,CACA,SAASC,KACL,OAAO,IAAIb,GAAaO,GAAiBO,SAAU,qCACvD,CAaA,SAASC,KACL,OAAO,IAAIf,GAAaO,GAAiBS,kBAAmB,yDAChE,CAaA,SAASC,GAAgBjU,GACrB,OAAO,IAAIgT,GAAaO,GAAiBW,iBAAkBlU,EAC/D,CACA,SAASmU,KACL,OAAO,IAAInB,GAAaO,GAAiBa,YAAa,gCAC1D,CAgBA,SAASC,GAAcC,EAAQtU,GAC3B,OAAO,IAAIgT,GAAaO,GAAiBgB,eAAgB,iCAAmCD,EAAS,MAAQtU,EACjH,CAIA,SAASwU,GAAcxU,GACnB,MAAM,IAAIgT,GAAaO,GAAiBkB,eAAgB,mBAAqBzU,EACjF,EAvHA,SAAWuT,GAEPA,EAA0B,QAAI,UAC9BA,EAAmC,iBAAI,mBACvCA,EAAmC,iBAAI,mBACvCA,EAAoC,kBAAI,oBACxCA,EAAiC,eAAI,iBACrCA,EAAkC,gBAAI,kBACtCA,EAA+B,aAAI,eACnCA,EAAmC,iBAAI,mBACvCA,EAAuC,qBAAI,uBAC3CA,EAAmC,iBAAI,mBACvCA,EAA2B,SAAI,WAE/BA,EAAqC,mBAAI,qBACzCA,EAA8B,YAAI,cAClCA,EAAyC,uBAAI,yBAC7CA,EAAoC,kBAAI,oBACxCA,EAAoC,kBAAI,oBACxCA,EAAyC,uBAAI,yBAC7CA,EAAkC,gBAAI,kBACtCA,EAAmC,iBAAI,mBACvCA,EAAyC,uBAAI,yBAC7CA,EAA8B,YAAI,cAClCA,EAAyC,uBAAI,yBAC7CA,EAAiC,eAAI,iBACrCA,EAAiC,eAAI,iBACrCA,EAA0C,wBAAI,yBACjD,CA5BD,CA4BGA,KAAqBA,GAAmB,CAAC,IAkH5C,MAAMmB,GACFnX,YAAYoX,EAAQC,GAChBhb,KAAK+a,OAASA,EACd/a,KAAKib,MAAQD,CACjB,CACIA,WACA,OAAOhb,KAAKib,KAChB,CACIC,aACA,OAA4B,IAArBlb,KAAKgb,KAAKva,MACrB,CACA0a,gBACI,MAAMC,EAASC,mBACf,MAAO,MAAQD,EAAOpb,KAAK+a,QAAU,MAAQK,EAAOpb,KAAKgb,KAC7D,CACAM,sBAEI,MAAO,MADQD,mBACOrb,KAAK+a,QAAU,IACzC,CACAQ,0BAA0BC,EAAcC,GACpC,IAAIC,EACJ,IACIA,EAAiBZ,GAASa,YAAYH,EAAcC,EACxD,CACA,MAAOvb,GAGH,OAAO,IAAI4a,GAASU,EAAc,GACtC,CACA,GAA4B,KAAxBE,EAAeV,KACf,OAAOU,EAGP,MA7GkBX,EA6GSS,EA5G5B,IAAIpC,GAAaO,GAAiBiC,uBAAwB,2BAA6Bb,EAAS,MAD3G,IAA8BA,CA+G1B,CACAQ,mBAAmBM,EAAKJ,GACpB,IAAIK,EAAW,KACf,MAAMC,EAAe,sBAOfC,EAAU,IAAIC,OAAO,SAAWF,EADvB,YAC8C,KAE7D,SAASG,EAAWC,GAChBA,EAAIlB,MAAQmB,mBAAmBD,EAAInB,KACvC,CACA,MACMqB,EAAsBZ,EAAKvX,QAAQ,OAAQ,OAU3CoY,EAAS,CACX,CAAEC,MAAOP,EAASQ,QAhBJ,CAAEzB,OAAQ,EAAGC,KAAM,GAgBKyB,WAvB1C,SAAkBN,GAC+B,MAAzCA,EAAInB,KAAKxX,OAAO2Y,EAAInB,KAAKva,OAAS,KAClC0b,EAAIlB,MAAQkB,EAAIlB,MAAMvD,MAAM,GAAI,GAExC,GAoBI,CACI6E,MAXsB,IAAIN,OAAO,aAAaI,sBAAoCN,qBAAwC,KAY1HS,QAXuB,CAAEzB,OAAQ,EAAGC,KAAM,GAY1CyB,WAAYP,GAEhB,CACIK,MAVmB,IAAIN,OAAO,aAJbR,IAASvC,GAC5B,sDACAuC,KAEiEM,aAAoC,KAWnGS,QAVoB,CAAEzB,OAAQ,EAAGC,KAAM,GAWvCyB,WAAYP,IAGpB,IAAK,IAAI1b,EAAI,EAAGA,EAAI8b,EAAO7b,OAAQD,IAAK,CACpC,MAAMkc,EAAQJ,EAAO9b,GACfmc,EAAWD,EAAMH,MAAMK,KAAKf,GAClC,GAAIc,EAAU,CACV,MAAME,EAAcF,EAASD,EAAMF,QAAQzB,QAC3C,IAAI+B,EAAYH,EAASD,EAAMF,QAAQxB,MAClC8B,IACDA,EAAY,IAEhBhB,EAAW,IAAIhB,GAAS+B,EAAaC,GACrCJ,EAAMD,WAAWX,GACjB,KACJ,CACJ,CACA,GAAgB,MAAZA,EACA,MAxKZ,SAAoBD,GAChB,OAAO,IAAIzC,GAAaO,GAAiBoD,YAAa,gBAAkBlB,EAAM,KAClF,CAsKkBmB,CAAWnB,GAErB,OAAOC,CACX,EAMJ,MAAMmB,GACFtZ,YAAYuB,GACRlF,KAAKkd,SAAWrX,QAAQH,OAAOR,EACnC,CAEAiY,aACI,OAAOnd,KAAKkd,QAChB,CAEAE,OAAOC,GAAa,GAAS,EAmKjC,SAASC,GAAS/c,GACd,MAAoB,iBAANA,GAAkBA,aAAayC,MACjD,CACA,SAASua,GAAahd,GAClB,OAAOid,MAAyBjd,aAAakd,IACjD,CACA,SAASD,KAGL,MAAuB,oBAATC,OP2NlB,WACI,IAAIlY,EACJ,MAAMmY,EAA4C,QAAxBnY,EAAKpB,WAAkC,IAAPoB,OAAgB,EAASA,EAAGmY,iBACtF,GAAyB,SAArBA,EACA,OAAO,EAEN,GAAyB,YAArBA,EACL,OAAO,EAEX,IACI,MAA2D,qBAAnDpX,OAAOE,UAAUmX,SAAS9N,KAAK,EAAA/P,EAAOyE,QAClD,CACA,MAAOrE,GACH,OAAO,CACX,CACJ,CO1O2C0d,EAC3C,CACA,SAASC,GAAeC,EAAUC,EAAUC,EAAUhY,GAClD,GAAIA,EAAQ+X,EACR,MAAM1D,GAAgB,sBAAsByD,gBAAuBC,iBAEvE,GAAI/X,EAAQgY,EACR,MAAM3D,GAAgB,sBAAsByD,gBAAuBE,aAE3E,CAkBA,SAASC,GAAQC,EAASzC,EAAM0C,GAC5B,IAAIC,EAAS3C,EAIb,OAHgB,MAAZ0C,IACAC,EAAS,WAAW3C,KAEjB,GAAG0C,OAAcC,OAAYF,GACxC,CA+DA,SAASG,GAAkB5E,EAAQ6E,GAG/B,MAAMC,EAAoB9E,GAAU,KAAOA,EAAS,IAO9C+E,GAAwD,IANtC,CAEpB,IAEA,KAEqCC,QAAQhF,GAC3CiF,GAAkE,IAA1CJ,EAAqBG,QAAQhF,GAC3D,OAAO8E,GAAqBC,GAAoBE,CACpD,EAzCA,SAAW9E,GACPA,EAAUA,EAAoB,SAAI,GAAK,WACvCA,EAAUA,EAAyB,cAAI,GAAK,gBAC5CA,EAAUA,EAAiB,MAAI,GAAK,OACvC,CAJD,CAIGA,KAAcA,GAAY,CAAC,IA+D9B,MAAM+E,GACFhb,YAAYib,EAAMC,EAASC,EAAUC,EAAOC,EAAeC,EAAuBC,EAAWC,EAAgBC,EAAUC,EAAmBC,EAAoBC,GAAQ,GAClKvf,KAAK4e,KAAOA,EACZ5e,KAAK6e,QAAUA,EACf7e,KAAK8e,SAAWA,EAChB9e,KAAK+e,MAAQA,EACb/e,KAAKgf,cAAgBA,EACrBhf,KAAKif,sBAAwBA,EAC7Bjf,KAAKkf,UAAYA,EACjBlf,KAAKmf,eAAiBA,EACtBnf,KAAKof,SAAWA,EAChBpf,KAAKqf,kBAAoBA,EACzBrf,KAAKsf,mBAAqBA,EAC1Btf,KAAKuf,MAAQA,EACbvf,KAAKwf,mBAAqB,KAC1Bxf,KAAKyf,WAAa,KAClBzf,KAAK0f,WAAY,EACjB1f,KAAK2f,YAAa,EAClB3f,KAAKkd,SAAW,IAAIrX,SAAQ,CAACF,EAASD,KAClC1F,KAAK4f,SAAWja,EAChB3F,KAAK6f,QAAUna,EACf1F,KAAK8f,QAAQ,GAErB,CAIAA,SACI,MA2CMC,EAAc,CAACC,EAAoBvG,KACrC,MAAM9T,EAAU3F,KAAK4f,SACfla,EAAS1F,KAAK6f,QACdI,EAAaxG,EAAOwG,WAC1B,GAAIxG,EAAOyG,eACP,IACI,MAAMtP,EAAS5Q,KAAKkf,UAAUe,EAAYA,EAAWE,oBAtOxD,IAuOiBvP,EACVjL,EAAQiL,GAGRjL,GAER,CACA,MAAOzF,GACHwF,EAAOxF,EACX,MAGA,GAAmB,OAAf+f,EAAqB,CACrB,MAAMG,EAAMvG,KACZuG,EAAI7G,eAAiB0G,EAAWI,eAC5BrgB,KAAKmf,eACLzZ,EAAO1F,KAAKmf,eAAec,EAAYG,IAGvC1a,EAAO0a,EAEf,MAEQ3G,EAAOQ,SAEPvU,EADY1F,KAAK2f,WAAapF,KAAeN,MAK7CvU,EADYqU,KAIxB,EAEA/Z,KAAK0f,UACLK,EAAY,EAAO,IAAIO,IAAiB,EAAO,MAAM,IAGrDtgB,KAAKyf,WAxYjB,SAAec,EAEfC,EAAmBC,GAGf,IAAIC,EAAc,EAIdC,EAAiB,KAEjBC,EAAkB,KAClBC,GAAa,EACbC,EAAc,EAClB,SAAS7G,IACL,OAAuB,IAAhB6G,CACX,CACA,IAAIC,GAAoB,EACxB,SAASC,KAAmBxT,GACnBuT,IACDA,GAAoB,EACpBP,EAAkB/Q,MAAM,KAAMjC,GAEtC,CACA,SAASyT,EAAcC,GACnBP,EAAiBQ,YAAW,KACxBR,EAAiB,KACjBJ,EAAUa,EAAiBnH,IAAW,GACvCiH,EACP,CACA,SAASG,IACDT,GACAU,aAAaV,EAErB,CACA,SAASQ,EAAgBzQ,KAAYnD,GACjC,GAAIuT,EAEA,YADAM,IAGJ,GAAI1Q,EAGA,OAFA0Q,SACAL,EAAgBnR,KAAK,KAAMc,KAAYnD,GAI3C,GADiByM,KAAc4G,EAI3B,OAFAQ,SACAL,EAAgBnR,KAAK,KAAMc,KAAYnD,GAO3C,IAAI+T,EAJAb,EAAc,KAEdA,GAAe,GAGC,IAAhBI,GACAA,EAAc,EACdS,EAAa,GAGbA,EAA6C,KAA/Bb,EAAcc,KAAKC,UAErCR,EAAcM,EAClB,CACA,IAAIG,GAAU,EACd,SAASC,EAAKC,GACNF,IAGJA,GAAU,EACVL,IACIN,IAGmB,OAAnBJ,GACKiB,IACDd,EAAc,GAElBQ,aAAaX,GACbM,EAAc,IAGTW,IACDd,EAAc,IAG1B,CAMA,OALAG,EAAc,GACdL,EAAkBO,YAAW,KACzBN,GAAa,EACbc,GAAK,EAAK,GACXlB,GACIkB,CACX,CA0S8BE,EAxFD,CAACC,EAAiB7H,KACnC,GAAIA,EAEA,YADA6H,GAAgB,EAAO,IAAIxB,IAAiB,EAAO,MAAM,IAG7D,MAAML,EAAajgB,KAAKsf,qBACxBtf,KAAKwf,mBAAqBS,EAC1B,MAAM8B,EAAmBC,IACrB,MAAMC,EAASD,EAAcC,OACvBC,EAAQF,EAAcG,iBAAmBH,EAAcE,OAAS,EACvC,OAA3BliB,KAAKqf,mBACLrf,KAAKqf,kBAAkB4C,EAAQC,EACnC,EAE2B,OAA3BliB,KAAKqf,mBACLY,EAAWmC,0BAA0BL,GAIzC9B,EACKoC,KAAKriB,KAAK4e,KAAM5e,KAAK6e,QAAS7e,KAAK+e,MAAO/e,KAAK8e,UAC/CjO,MAAK,KACyB,OAA3B7Q,KAAKqf,mBACLY,EAAWqC,6BAA6BP,GAE5C/hB,KAAKwf,mBAAqB,KAC1B,MAAM+C,EAAYtC,EAAWuC,iBAAmB5I,GAAU6I,SACpDhJ,EAASwG,EAAWyC,YAC1B,IAAKH,GACAlE,GAAkB5E,EAAQzZ,KAAKif,wBAC5Bjf,KAAKuf,MAAQ,CACjB,MAAMoD,EAAc1C,EAAWuC,iBAAmB5I,GAAUgJ,MAE5D,YADAd,GAAgB,EAAO,IAAIxB,IAAiB,EAAO,KAAMqC,GAE7D,CACA,MAAME,GAAsD,IAAxC7iB,KAAKgf,cAAcP,QAAQhF,GAC/CqI,GAAgB,EAAM,IAAIxB,GAAiBuC,EAAa5C,GAAY,GACtE,GAmDoCF,EAAa/f,KAAKof,SAEhE,CAEAjC,aACI,OAAOnd,KAAKkd,QAChB,CAEAE,OAAO0F,GACH9iB,KAAK0f,WAAY,EACjB1f,KAAK2f,WAAamD,IAAa,EACP,OAApB9iB,KAAKyf,aACLkC,EAAK3hB,KAAKyf,aA7Sf,GA+SiC,OAA5Bzf,KAAKwf,oBACLxf,KAAKwf,mBAAmBuD,OAEhC,EAMJ,MAAMzC,GACF3c,YAAYuc,EAAgBD,EAAYhG,GACpCja,KAAKkgB,eAAiBA,EACtBlgB,KAAKigB,WAAaA,EAClBjgB,KAAKia,WAAaA,CACtB,EAgDJ,SAAS+I,KACL,MAA2B,oBAAhBC,YACAA,YAE2B,oBAAtBC,kBACLA,uBAGP,CAER,CAOA,SAASC,MAAa3V,GAClB,MAAMyV,EAAcD,KACpB,QAAoB5W,IAAhB6W,EAA2B,CAC3B,MAAMG,EAAK,IAAIH,EACf,IAAK,IAAIziB,EAAI,EAAGA,EAAIgN,EAAK/M,OAAQD,IAC7B4iB,EAAGC,OAAO7V,EAAKhN,IAEnB,OAAO4iB,EAAGE,SACd,CAEI,GAAI9F,KACA,OAAO,IAAIC,KAAKjQ,GAGhB,MAAM,IAAI4L,GAAaO,GAAiB4J,wBAAyB,sDAG7E,CAmEA,MAAMC,GAAe,CAQjBC,IAAK,MAOLC,OAAQ,SAORC,UAAW,YAUXC,SAAU,YAEd,MAAMC,GACFlgB,YAAYoD,EAAM+c,GACd9jB,KAAK+G,KAAOA,EACZ/G,KAAK8jB,YAAcA,GAAe,IACtC,EAmBJ,SAASC,GAAW/d,GAChB,MAAMyB,EAAI,GACV,IAAK,IAAIjH,EAAI,EAAGA,EAAIwF,EAAMvF,OAAQD,IAAK,CACnC,IAAIE,EAAIsF,EAAMrF,WAAWH,GACrBE,GAAK,IACL+G,EAAEjF,KAAK9B,GAGHA,GAAK,KACL+G,EAAEjF,KAAK,IAAO9B,GAAK,EAAI,IAAW,GAAJA,GAGV,QAAX,MAAJA,GAEaF,EAAIwF,EAAMvF,OAAS,GAA2C,QAAX,MAA1BuF,EAAMrF,WAAWH,EAAI,KAQxDE,EAAI,OAAe,KAFRA,IAEiB,GAAY,KAD7BsF,EAAMrF,aAAaH,GAE9BiH,EAAEjF,KAAK,IAAO9B,GAAK,GAAK,IAAQA,GAAK,GAAM,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,IAN9E+G,EAAEjF,KAAK,IAAK,IAAK,KAUD,QAAX,MAAJ9B,GAED+G,EAAEjF,KAAK,IAAK,IAAK,KAGjBiF,EAAEjF,KAAK,IAAO9B,GAAK,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,EAK1E,CACA,OAAO,IAAIsjB,WAAWvc,EAC1B,CAWA,SAASwc,GAAavJ,EAAQ1U,GAC1B,OAAQ0U,GACJ,KAAK8I,GAAaE,OAAQ,CACtB,MAAMQ,GAAmC,IAAxBle,EAAMyY,QAAQ,KACzB0F,GAAmC,IAAxBne,EAAMyY,QAAQ,KAC/B,GAAIyF,GAAYC,EAEZ,MAAM1J,GAAcC,EAAQ,uBADRwJ,EAAW,IAAM,KAGjC,qCAER,KACJ,CACA,KAAKV,GAAaG,UAAW,CACzB,MAAMS,GAAkC,IAAxBpe,EAAMyY,QAAQ,KACxB4F,GAAmC,IAAxBre,EAAMyY,QAAQ,KAC/B,GAAI2F,GAAWC,EAEX,MAAM5J,GAAcC,EAAQ,uBADR0J,EAAU,IAAM,KAC8B,kCAEtEpe,EAAQA,EAAM9B,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC/C,KACJ,EAGJ,IAAIrB,EACJ,IACIA,EAjKR,SAAsByhB,GAClB,GAAoB,oBAATjjB,KACP,MAnuBG,IAAI+X,GAAaO,GAAiB4J,wBAAyB,iKAquBlE,OAAOliB,KAAKijB,EAChB,CA4JgBC,CAAave,EACzB,CACA,MAAO9F,GACH,GAAIA,EAAEkG,QAAQ0B,SAAS,YACnB,MAAM5H,EAEV,MAAMua,GAAcC,EAAQ,0BAChC,CACA,MAAM8J,EAAQ,IAAIR,WAAWnhB,EAAMpC,QACnC,IAAK,IAAID,EAAI,EAAGA,EAAIqC,EAAMpC,OAAQD,IAC9BgkB,EAAMhkB,GAAKqC,EAAMlC,WAAWH,GAEhC,OAAOgkB,CACX,CACA,MAAMC,GACF9gB,YAAY+gB,GACR1kB,KAAKY,QAAS,EACdZ,KAAK8jB,YAAc,KACnB,MAAMa,EAAUD,EAAQ5f,MAAM,mBAC9B,GAAgB,OAAZ6f,EACA,MAAMlK,GAAc+I,GAAaI,SAAU,yDAE/C,MAAMgB,EAASD,EAAQ,IAAM,KAuBrC,IAAkBE,EAAGC,EAtBC,MAAVF,IACA5kB,KAAKY,QAqBIkkB,EArBsB,WAqBzBD,EArBiBD,GAsBVnkB,QAAUqkB,GAIxBD,EAAEzM,UAAUyM,EAAEpkB,OAASqkB,KAAgBA,GAzBtC9kB,KAAK8jB,YAAc9jB,KAAKY,OAClBgkB,EAAOxM,UAAU,EAAGwM,EAAOnkB,OAAS,GACpCmkB,GAEV5kB,KAAK+kB,KAAOL,EAAQtM,UAAUsM,EAAQjG,QAAQ,KAAO,EACzD,EA8CJ,MAAMuG,GACFrhB,YAAYoD,EAAMke,GACd,IAAIC,EAAO,EACPC,EAAW,GACX5H,GAAaxW,IACb/G,KAAKolB,MAAQre,EACbme,EAAOne,EAAKme,KACZC,EAAWpe,EAAKuB,MAEXvB,aAAgBse,aACjBJ,EACAjlB,KAAKolB,MAAQ,IAAIpB,WAAWjd,IAG5B/G,KAAKolB,MAAQ,IAAIpB,WAAWjd,EAAKue,YACjCtlB,KAAKolB,MAAMpb,IAAI,IAAIga,WAAWjd,KAElCme,EAAOllB,KAAKolB,MAAM3kB,QAEbsG,aAAgBid,aACjBiB,EACAjlB,KAAKolB,MAAQre,GAGb/G,KAAKolB,MAAQ,IAAIpB,WAAWjd,EAAKtG,QACjCT,KAAKolB,MAAMpb,IAAIjD,IAEnBme,EAAOne,EAAKtG,QAEhBT,KAAKulB,MAAQL,EACbllB,KAAKwlB,MAAQL,CACjB,CACAD,OACI,OAAOllB,KAAKulB,KAChB,CACAjd,OACI,OAAOtI,KAAKwlB,KAChB,CACA9N,MAAM+N,EAAWC,GACb,GAAInI,GAAavd,KAAKolB,OAAQ,CAC1B,MACMO,GApTCC,EAmTU5lB,KAAKolB,MAnTTvD,EAoTsB4D,EApTfX,EAoT0BY,EAnTlDE,EAAKC,YACED,EAAKC,YAAYhE,EAAOiD,GAE1Bc,EAAKE,SACHF,EAAKE,SAASjE,EAAOiD,GAEvBc,EAAKlO,MACHkO,EAAKlO,MAAMmK,EAAOiD,GAEtB,MA2SC,OAAe,OAAXa,EACO,KAEJ,IAAIX,GAAQW,EACvB,CAzTR,IAAmBC,EAAM/D,EAAOiD,EA0TnB,CACD,MAAMpN,EAAQ,IAAIsM,WAAWhkB,KAAKolB,MAAMW,OAAQN,EAAWC,EAAUD,GACrE,OAAO,IAAIT,GAAQtN,GAAO,EAC9B,CACJ,CACA6D,kBAAkB/N,GACd,GAAIgQ,KAAuB,CACvB,MAAMwI,EAASxY,EAAKlC,KAAKkH,GACjBA,aAAewS,GACRxS,EAAI4S,MAGJ5S,IAGf,OAAO,IAAIwS,GAAQ7B,GAAU1T,MAAM,KAAMuW,GAC7C,CACK,CACD,MAAMC,EAAczY,EAAKlC,KAAKkH,GACtB8K,GAAS9K,GAzO7B,SAAwBkI,EAAQwL,GAC5B,OAAQxL,GACJ,KAAK8I,GAAaC,IACd,OAAO,IAAII,GAAWE,GAAWmC,IACrC,KAAK1C,GAAaE,OAClB,KAAKF,GAAaG,UACd,OAAO,IAAIE,GAAWI,GAAavJ,EAAQwL,IAC/C,KAAK1C,GAAaI,SACd,OAAO,IAAIC,GAmHvB,SAAuBsC,GACnB,MAAMC,EAAQ,IAAI3B,GAAa0B,GAC/B,OAAIC,EAAMxlB,OACCqjB,GAAaT,GAAaE,OAAQ0C,EAAMrB,MAxEvD,SAA8B/e,GAC1B,IAAIhB,EACJ,IACIA,EAAUoX,mBAAmBpW,EACjC,CACA,MAAO9F,GACH,MAAMua,GAAc+I,GAAaI,SAAU,sBAC/C,CACA,OAAOG,GAAW/e,EACtB,CAkEeqhB,CAAqBD,EAAMrB,KAE1C,CA3HkCuB,CAAcJ,GA6H9B,IAAIzB,GA7H2DyB,GA8HhEpC,aA1Hb,MAAMjK,IACV,CA6N2B0M,CAAe/C,GAAaC,IAAKjR,GAAKzL,KAItCyL,EAAI4S,QAGnB,IAAIoB,EAAc,EAClBP,EAAYQ,SAASjC,IACjBgC,GAAehC,EAAMc,UAAU,IAEnC,MAAMoB,EAAS,IAAI1C,WAAWwC,GAC9B,IAAI/U,EAAQ,EAMZ,OALAwU,EAAYQ,SAASjC,IACjB,IAAK,IAAIhkB,EAAI,EAAGA,EAAIgkB,EAAM/jB,OAAQD,IAC9BkmB,EAAOjV,KAAW+S,EAAMhkB,EAC5B,IAEG,IAAIwkB,GAAQ0B,GAAQ,EAC/B,CACJ,CACAC,aACI,OAAO3mB,KAAKolB,KAChB,EAuBJ,SAASwB,GAAiB/B,GACtB,IAAIgC,EACJ,IACIA,EAAMniB,KAAKC,MAAMkgB,EACrB,CACA,MAAO3kB,GACH,OAAO,IACX,CACA,MAlwBoB,iBADEK,EAmwBDsmB,IAlwBYplB,MAAMC,QAAQnB,GAswBpC,KAHAsmB,EApwBf,IAA0BtmB,CAywB1B,CAqDA,SAASumB,GAAc9L,GACnB,MAAMvJ,EAAQuJ,EAAK+L,YAAY,IAAK/L,EAAKva,OAAS,GAClD,OAAe,IAAXgR,EACOuJ,EAGAA,EAAKtD,MAAMjG,EAAQ,EAElC,CAkBA,SAASuV,GAASC,EAAUjhB,GACxB,OAAOA,CACX,CACA,MAAMkhB,GACFvjB,YAAYwjB,EAAQC,EAAOC,EAAUC,GACjCtnB,KAAKmnB,OAASA,EACdnnB,KAAKonB,MAAQA,GAASD,EACtBnnB,KAAKqnB,WAAaA,EAClBrnB,KAAKsnB,MAAQA,GAASN,EAC1B,EAEJ,IAAIO,GAAY,KAShB,SAASC,KACL,GAAID,GACA,OAAOA,GAEX,MAAME,EAAW,GACjBA,EAASjlB,KAAK,IAAI0kB,GAAQ,WAC1BO,EAASjlB,KAAK,IAAI0kB,GAAQ,eAC1BO,EAASjlB,KAAK,IAAI0kB,GAAQ,mBAC1BO,EAASjlB,KAAK,IAAI0kB,GAAQ,OAAQ,YAAY,IAI9C,MAAMQ,EAAc,IAAIR,GAAQ,QAChCQ,EAAYJ,MAJZ,SAA2BK,EAAWC,GAClC,OAlBR,SAAmBA,GACf,OAAKtK,GAASsK,IAAaA,EAASnnB,OAAS,EAClCmnB,EAGAd,GAAcc,EAE7B,CAWeC,CAAUD,EACrB,EAGAH,EAASjlB,KAAKklB,GAYd,MAAMI,EAAc,IAAIZ,GAAQ,QAahC,OAZAY,EAAYR,MATZ,SAAmBK,EAAWzC,GAC1B,YAAa9Y,IAAT8Y,EACO6C,OAAO7C,GAGPA,CAEf,EAGAuC,EAASjlB,KAAKslB,GACdL,EAASjlB,KAAK,IAAI0kB,GAAQ,gBAC1BO,EAASjlB,KAAK,IAAI0kB,GAAQ,YAC1BO,EAASjlB,KAAK,IAAI0kB,GAAQ,UAAW,MAAM,IAC3CO,EAASjlB,KAAK,IAAI0kB,GAAQ,eAAgB,MAAM,IAChDO,EAASjlB,KAAK,IAAI0kB,GAAQ,qBAAsB,MAAM,IACtDO,EAASjlB,KAAK,IAAI0kB,GAAQ,kBAAmB,MAAM,IACnDO,EAASjlB,KAAK,IAAI0kB,GAAQ,kBAAmB,MAAM,IACnDO,EAASjlB,KAAK,IAAI0kB,GAAQ,cAAe,MAAM,IAC/CO,EAASjlB,KAAK,IAAI0kB,GAAQ,WAAY,kBAAkB,IACxDK,GAAYE,EACLF,EACX,CAqBA,SAASS,GAAmBphB,EAASqhB,EAAgBR,GACjD,MAAMZ,EAAMD,GAAiBqB,GAC7B,OAAY,OAARpB,EACO,KAdf,SAAsBjgB,EAASshB,EAAUT,GACrC,MAAMR,EAAW,CACjBA,KAAmB,QACbkB,EAAMV,EAAShnB,OACrB,IAAK,IAAID,EAAI,EAAGA,EAAI2nB,EAAK3nB,IAAK,CAC1B,MAAM4nB,EAAUX,EAASjnB,GACzBymB,EAASmB,EAAQhB,OAASgB,EAAQd,MAAML,EAAUiB,EAASE,EAAQjB,QACvE,CAEA,OAlBJ,SAAgBF,EAAUrgB,GAOtBN,OAAO+hB,eAAepB,EAAU,MAAO,CAAEvd,IANzC,WACI,MAAMqR,EAASkM,EAAiB,OAC1BjM,EAAOiM,EAAmB,SAC1B9K,EAAM,IAAIrB,GAASC,EAAQC,GACjC,OAAOpU,EAAQ0hB,sBAAsBnM,EACzC,GAEJ,CASIoM,CAAOtB,EAAUrgB,GACVqgB,CACX,CAOWuB,CAAa5hB,EADHigB,EACsBY,EAC3C,CA8BA,SAASgB,GAAiBxB,EAAUQ,GAChC,MAAMS,EAAW,CAAC,EACZC,EAAMV,EAAShnB,OACrB,IAAK,IAAID,EAAI,EAAGA,EAAI2nB,EAAK3nB,IAAK,CAC1B,MAAM4nB,EAAUX,EAASjnB,GACrB4nB,EAAQf,WACRa,EAASE,EAAQjB,QAAUF,EAASmB,EAAQhB,OAEpD,CACA,OAAO1iB,KAAKyT,UAAU+P,EAC1B,CAkBA,MAAMQ,GAAe,WACfC,GAAY,QAqClB,MAAMC,GACFjlB,YAAYkY,EAAKhO,EAQjBgb,EAASpI,GACLzgB,KAAK6b,IAAMA,EACX7b,KAAK6N,OAASA,EACd7N,KAAK6oB,QAAUA,EACf7oB,KAAKygB,QAAUA,EACfzgB,KAAK8oB,UAAY,CAAC,EAClB9oB,KAAK+oB,QAAU,CAAC,EAChB/oB,KAAKgpB,KAAO,KACZhpB,KAAKipB,aAAe,KAKpBjpB,KAAKkpB,iBAAmB,KACxBlpB,KAAKmpB,aAAe,CAAC,KACrBnpB,KAAKse,qBAAuB,EAChC,EAsBJ,SAAS8K,GAAaC,GAClB,IAAKA,EACD,MAAMxP,IAEd,CACA,SAASyP,GAAgB1iB,EAAS6gB,GAM9B,OALA,SAAiB8B,EAAKC,GAClB,MAAMvC,EAAWe,GAAmBphB,EAAS4iB,EAAM/B,GAEnD,OADA2B,GAA0B,OAAbnC,GACNA,CACX,CAEJ,CAiBA,SAASwC,GAAmB3N,GA+BxB,OA9BA,SAAsByN,EAAKnJ,GACvB,IAAIsJ,EAj8CZ,IAAsB1O,EAdCD,EA0+Cf,OA1BwB,MAApBwO,EAAI7G,YAKAgH,EADJH,EAAIlJ,eAAevY,SAAS,uCAx8C7B,IAAIsR,GAAaO,GAAiBgQ,iBAAkB,iFAHpD,IAAIvQ,GAAaO,GAAiBiQ,gBAFzB,+FAq9CgB,MAApBL,EAAI7G,aA59CG3H,EA69CgBe,EAASf,OAAhC2O,EA59CL,IAAItQ,GAAaO,GAAiBkQ,eAAgB,qBACrD9O,EADqD,2EA+9CrB,MAApBwO,EAAI7G,aAl9CF1H,EAm9CoBc,EAASd,KAA/B0O,EAl9CT,IAAItQ,GAAaO,GAAiBmQ,aAAc,4CAA8C9O,EAAO,OAq9C5F0O,EAAStJ,EAIrBsJ,EAAOjQ,OAAS8P,EAAI7G,YACpBgH,EAAOnQ,eAAiB6G,EAAI7G,eACrBmQ,CACX,CAEJ,CAaA,SAASK,GAAcnjB,EAASkV,EAAU2L,GACtC,MACM5L,EAAMoC,GADInC,EAASX,gBACIvU,EAAQ6U,KAAM7U,EAAQojB,WAE7CvJ,EAAU7Z,EAAQqjB,sBAClBC,EAAc,IAAItB,GAAY/M,EAFrB,MAEkCyN,GAAgB1iB,EAAS6gB,GAAWhH,GAErF,OADAyJ,EAAYjB,aAlBhB,SAA4BnN,GACxB,MAAMqO,EAASV,GAAmB3N,GASlC,OARA,SAAsByN,EAAKnJ,GACvB,IAAIsJ,EAASS,EAAOZ,EAAKnJ,GAp/CjC,IAAwBpF,EAy/ChB,OAJwB,MAApBuO,EAAI7G,cAr/CQ1H,EAs/CYc,EAASd,KAAjC0O,EAr/CD,IAAItQ,GAAaO,GAAiByQ,iBAAkB,WAAapP,EAAO,sBAu/C3E0O,EAAOnQ,eAAiB6G,EAAI7G,eACrBmQ,CACX,CAEJ,CAO+BW,CAAmBvO,GACvCoO,CACX,CACA,SAASI,GAAO1jB,EAASkV,EAAUyO,EAAWC,EAAWC,GACrD,MAAM3B,EAAY,CAAC,EACfhN,EAASZ,OACT4N,EAAkB,OAAI,GAGtBA,EAAkB,OAAIhN,EAASd,KAAO,IAEtCuP,GAAaA,EAAU9pB,OAAS,IAChCqoB,EAAqB,UAAIyB,GAEzBC,IACA1B,EAAqB,UAAI0B,GAEzBC,IACA3B,EAAsB,WAAI2B,GAE9B,MACM5O,EAAMoC,GADInC,EAASR,sBACI1U,EAAQ6U,KAAM7U,EAAQojB,WAE7CvJ,EAAU7Z,EAAQqjB,sBAClBC,EAAc,IAAItB,GAAY/M,EAFrB,MAzFnB,SAAqBjV,EAASmU,GAM1B,OALA,SAAiBwO,EAAKC,GAClB,MAAMkB,EA7Ed,SAA4B9jB,EAASmU,EAAQkN,GACzC,MAAMpB,EAAMD,GAAiBqB,GAC7B,OAAY,OAARpB,EACO,KAxBf,SAA6BjgB,EAASmU,EAAQmN,GAC1C,MAAMwC,EAAa,CACfC,SAAU,GACVC,MAAO,GACPC,cAAe3C,EAAwB,eAE3C,GAAIA,EAASQ,IACT,IAAK,MAAM1N,KAAQkN,EAASQ,IAAe,CACvC,MAAMoC,EAA2B9P,EAAK9W,QAAQ,MAAO,IAC/C6mB,EAAYnkB,EAAQ0hB,sBAAsB,IAAIxN,GAASC,EAAQ+P,IACrEJ,EAAWC,SAASnoB,KAAKuoB,EAC7B,CAEJ,GAAI7C,EAASS,IACT,IAAK,MAAMqC,KAAQ9C,EAASS,IAAY,CACpC,MAAMoC,EAAYnkB,EAAQ0hB,sBAAsB,IAAIxN,GAASC,EAAQiQ,EAAW,OAChFN,EAAWE,MAAMpoB,KAAKuoB,EAC1B,CAEJ,OAAOL,CACX,CAOWO,CAAoBrkB,EAASmU,EADnB8L,EAErB,CAsE2BqE,CAAmBtkB,EAASmU,EAAQyO,GAEvD,OADAJ,GAA4B,OAAfsB,GACNA,CACX,CAEJ,CAoFqDS,CAAYvkB,EAASkV,EAASf,QAAS0F,GAGxF,OAFAyJ,EAAYpB,UAAYA,EACxBoB,EAAYjB,aAAeQ,GAAmB3N,GACvCoO,CACX,CAoDA,SAASkB,GAAmBtP,EAAU8J,EAAMqB,GACxC,MAAMoE,EAAgB/kB,OAAOqN,OAAO,CAAC,EAAGsT,GAMxC,OALAoE,EAAwB,SAAIvP,EAASd,KACrCqQ,EAAoB,KAAIzF,EAAKV,OACxBmG,EAA2B,cAC5BA,EAA2B,YAVnC,SAA+BpE,EAAUrB,GACrC,OACKA,GAAQA,EAAKtd,QACd,0BACR,CAMuCgjB,CAAsB,EAAM1F,IAExDyF,CACX,CAsDA,MAAME,GACF5nB,YAAY6nB,EAAStJ,EAAOuJ,EAAWxE,GACnCjnB,KAAKwrB,QAAUA,EACfxrB,KAAKkiB,MAAQA,EACbliB,KAAKyrB,YAAcA,EACnBzrB,KAAKinB,SAAWA,GAAY,IAChC,EAEJ,SAASyE,GAAmBnC,EAAKoC,GAC7B,IAAIlS,EAAS,KACb,IACIA,EAAS8P,EAAIqC,kBAAkB,uBACnC,CACA,MAAO1rB,GACHkpB,IAAa,EACjB,CAGA,OADAA,KAAe3P,IAA6C,KADtCkS,GAAW,CAAC,WACKlN,QAAQhF,IACxCA,CACX,CAoEA,MAAMoS,GAA8B,OAiGpC,MAoBMC,GAAY,CAEdC,QAAS,UAETC,OAAQ,SAERC,QAAS,UAET/R,SAAU,WAEVhN,MAAO,SAEX,SAASgf,GAA+BC,GACpC,OAAQA,GACJ,IAAK,UACL,IAAK,UACL,IAAK,YACD,OAAOL,GAAUC,QACrB,IAAK,SACD,OAAOD,GAAUE,OACrB,IAAK,UACD,OAAOF,GAAUG,QACrB,IAAK,WACD,OAAOH,GAAU5R,SAGrB,QAEI,OAAO4R,GAAU5e,MAE7B,CAkBA,MAAMkf,GACFzoB,YAAY0oB,EAAgBnnB,EAAOgL,GAE/B,GA9hDgB,mBA6hDemc,GAA4B,MAATnnB,GAA6B,MAAZgL,EAE/DlQ,KAAKssB,KAAOD,EACZrsB,KAAKkF,MAAQA,QAAqCA,OAAQkH,EAC1DpM,KAAKkQ,SAAWA,QAA2CA,OAAW9D,MAErE,CACD,MAAMmgB,EAAWF,EACjBrsB,KAAKssB,KAAOC,EAASD,KACrBtsB,KAAKkF,MAAQqnB,EAASrnB,MACtBlF,KAAKkQ,SAAWqc,EAASrc,QAC7B,CACJ,EAyBJ,SAAS,GAAMsc,GACX,MAAO,IAAIC,KAEP5mB,QAAQF,UAAUkL,MAAK,IAAM2b,KAAKC,IAAe,CAEzD,CAmBA,IAAIC,GAAsB,KAK1B,MAAMC,GACFhpB,cACI3D,KAAK4sB,OAAQ,EACb5sB,KAAK6sB,KAAO,IAAIC,eAChB9sB,KAAK+sB,UACL/sB,KAAKgtB,WAAapT,GAAU6I,SAC5BziB,KAAKitB,aAAe,IAAIpnB,SAAQF,IAC5B3F,KAAK6sB,KAAKzc,iBAAiB,SAAS,KAChCpQ,KAAKgtB,WAAapT,GAAUgJ,MAC5Bjd,GAAS,IAEb3F,KAAK6sB,KAAKzc,iBAAiB,SAAS,KAChCpQ,KAAKgtB,WAAapT,GAAUsT,cAC5BvnB,GAAS,IAEb3F,KAAK6sB,KAAKzc,iBAAiB,QAAQ,KAC/BzK,GAAS,GACX,GAEV,CACA0c,KAAKxG,EAAKhO,EAAQmb,EAAMD,GACpB,GAAI/oB,KAAK4sB,MACL,MAAMhS,GAAc,iCAIxB,GAFA5a,KAAK4sB,OAAQ,EACb5sB,KAAK6sB,KAAKrX,KAAK3H,EAAQgO,GAAK,QACZzP,IAAZ2c,EACA,IAAK,MAAM3hB,KAAO2hB,EACVA,EAAQoE,eAAe/lB,IACvBpH,KAAK6sB,KAAKO,iBAAiBhmB,EAAK2hB,EAAQ3hB,GAAKuW,YAUzD,YANavR,IAAT4c,EACAhpB,KAAK6sB,KAAKxK,KAAK2G,GAGfhpB,KAAK6sB,KAAKxK,OAEPriB,KAAKitB,YAChB,CACAzK,eACI,IAAKxiB,KAAK4sB,MACN,MAAMhS,GAAc,yCAExB,OAAO5a,KAAKgtB,UAChB,CACAtK,YACI,IAAK1iB,KAAK4sB,MACN,MAAMhS,GAAc,sCAExB,IACI,OAAO5a,KAAK6sB,KAAKpT,MACrB,CACA,MAAOvZ,GACH,OAAQ,CACZ,CACJ,CACAigB,cACI,IAAKngB,KAAK4sB,MACN,MAAMhS,GAAc,wCAExB,OAAO5a,KAAK6sB,KAAKQ,QACrB,CACAhN,eACI,IAAKrgB,KAAK4sB,MACN,MAAMhS,GAAc,yCAExB,OAAO5a,KAAK6sB,KAAKS,UACrB,CAEAvK,QACI/iB,KAAK6sB,KAAK9J,OACd,CACA6I,kBAAkB2B,GACd,OAAOvtB,KAAK6sB,KAAKjB,kBAAkB2B,EACvC,CACAnL,0BAA0BoL,GACE,MAApBxtB,KAAK6sB,KAAKY,QACVztB,KAAK6sB,KAAKY,OAAOrd,iBAAiB,WAAYod,EAEtD,CACAlL,6BAA6BkL,GACD,MAApBxtB,KAAK6sB,KAAKY,QACVztB,KAAK6sB,KAAKY,OAAOxd,oBAAoB,WAAYud,EAEzD,EAEJ,MAAME,WAA0Bf,GAC5BI,UACI/sB,KAAK6sB,KAAKc,aAAe,MAC7B,EAEJ,SAASC,KACL,OAAOlB,GAAsBA,KAAwB,IAAIgB,EAC7D,CAuCA,MAAMG,GAMFlqB,YAAYmqB,EAAKlI,EAAMqB,EAAW,MAI9BjnB,KAAK+tB,aAAe,EACpB/tB,KAAKguB,oBAAqB,EAC1BhuB,KAAKiuB,sBAAuB,EAC5BjuB,KAAKkuB,WAAa,GAClBluB,KAAKmuB,YAAS/hB,EACdpM,KAAKouB,gBAAahiB,EAClBpM,KAAKquB,cAAWjiB,EAChBpM,KAAKsuB,iBAAmB,EACxBtuB,KAAKuuB,cAAWniB,EAChBpM,KAAKwuB,aAAUpiB,EACfpM,KAAKyuB,KAAOX,EACZ9tB,KAAK0uB,MAAQ9I,EACb5lB,KAAK2nB,UAAYV,EACjBjnB,KAAK2uB,UAAYnH,KACjBxnB,KAAK4uB,WAAa5uB,KAAK6uB,mBAAmB7uB,KAAK0uB,OAC/C1uB,KAAK8uB,OAAS,UACd9uB,KAAK+uB,cAAgB7pB,IAGjB,GAFAlF,KAAKquB,cAAWjiB,EAChBpM,KAAKsuB,iBAAmB,EACpBppB,EAAMwU,YAAYC,GAAiBO,UACnCla,KAAKguB,oBAAqB,EAC1BhuB,KAAKgvB,2BAEJ,CACD,MAAMC,EAAiBjvB,KAAKkvB,8BAC5B,GAAI7Q,GAAkBnZ,EAAMuU,OAAQ,IAAK,CACrC,IAAIwV,EAOA,OAHAjvB,KAAKmvB,UAAY3N,KAAK4N,IAAqB,EAAjBpvB,KAAKmvB,UA9uEjB,KA+uEdnvB,KAAKguB,oBAAqB,OAC1BhuB,KAAKgvB,uBALL9pB,EAAQ6U,IAQhB,CACA/Z,KAAKmuB,OAASjpB,EACdlF,KAAKqvB,YAAY,QACrB,GAEJrvB,KAAKsvB,sBAAwBpqB,IACzBlF,KAAKquB,cAAWjiB,EACZlH,EAAMwU,YAAYC,GAAiBO,UACnCla,KAAKgvB,wBAGLhvB,KAAKmuB,OAASjpB,EACdlF,KAAKqvB,YAAY,SACrB,EAEJrvB,KAAKmvB,UAAY,EACjBnvB,KAAKuvB,aAAevvB,KAAKyuB,KAAKe,QAAQC,mBACtCzvB,KAAK0vB,SAAW,IAAI7pB,SAAQ,CAACF,EAASD,KAClC1F,KAAKuuB,SAAW5oB,EAChB3F,KAAKwuB,QAAU9oB,EACf1F,KAAK2vB,QAAQ,IAIjB3vB,KAAK0vB,SAAS7e,KAAK,MAAM,QAC7B,CACAqe,8BACI,OAAOlvB,KAAKmvB,UAAYnvB,KAAKuvB,YACjC,CACAK,wBACI,MAAMC,EAAa7vB,KAAK+tB,aACxB,OAAO9L,GAAUjiB,KAAK8vB,gBAAgBD,EAAa5N,EACvD,CACA4M,mBAAmBjJ,GACf,OAAOA,EAAKV,OAAS,MACzB,CACAyK,SACwB,YAAhB3vB,KAAK8uB,aAIa1iB,IAAlBpM,KAAKquB,WAGLruB,KAAK4uB,gBACmBxiB,IAApBpM,KAAKouB,WACLpuB,KAAK+vB,mBAGD/vB,KAAKguB,mBACLhuB,KAAKgwB,eAGDhwB,KAAKiuB,qBAELjuB,KAAKiwB,iBAGLjwB,KAAKkwB,eAAiB/O,YAAW,KAC7BnhB,KAAKkwB,oBAAiB9jB,EACtBpM,KAAKmwB,iBAAiB,GACvBnwB,KAAKmvB,WAMpBnvB,KAAKowB,iBAEb,CACAC,cAActqB,GAEVF,QAAQuF,IAAI,CACRpL,KAAKyuB,KAAKe,QAAQc,gBAClBtwB,KAAKyuB,KAAKe,QAAQe,sBACnB1f,MAAK,EAAE2f,EAAWC,MACjB,OAAQzwB,KAAK8uB,QACT,IAAK,UACD/oB,EAASyqB,EAAWC,GACpB,MACJ,IAAK,YACDzwB,KAAKqvB,YAAY,YACjB,MACJ,IAAK,UACDrvB,KAAKqvB,YAAY,UAEzB,GAER,CAEAU,mBACI/vB,KAAKqwB,eAAc,CAACG,EAAWC,KAC3B,MAAMvG,EA3jBlB,SAA+BtjB,EAASkV,EAAU2L,EAAU7B,EAAMqB,GAC9D,MAAM/I,EAAUpC,EAASR,sBACnBoV,EAAoBtF,GAAmBtP,EAAU8J,EAAMqB,GACvD6B,EAAY,CAAEhlB,KAAM4sB,EAA4B,UAChD7U,EAAMoC,GAAQC,EAAStX,EAAQ6U,KAAM7U,EAAQojB,WAE7CjB,EAAU,CACZ,yBAA0B,YAC1B,wBAAyB,QACzB,sCAAuC,GAAGnD,EAAKV,SAC/C,oCAAqCwL,EAA+B,YACpE,eAAgB,mCAEd1H,EAAOP,GAAiBiI,EAAmBjJ,GAC3ChH,EAAU7Z,EAAQ6oB,mBAalBvF,EAAc,IAAItB,GAAY/M,EAtBrB,QAUf,SAAiB0N,GAEb,IAAI1N,EADJ6P,GAAmBnC,GAEnB,IACI1N,EAAM0N,EAAIqC,kBAAkB,oBAChC,CACA,MAAO1rB,GACHkpB,IAAa,EACjB,CAEA,OADAA,GAAa9L,GAASzB,IACfA,CACX,GAC0D4E,GAK1D,OAJAyJ,EAAYpB,UAAYA,EACxBoB,EAAYnB,QAAUA,EACtBmB,EAAYlB,KAAOA,EACnBkB,EAAYjB,aAAeQ,GAAmB3N,GACvCoO,CACX,CA0hBgCyG,CAAsB3wB,KAAKyuB,KAAKe,QAASxvB,KAAKyuB,KAAKmC,UAAW5wB,KAAK2uB,UAAW3uB,KAAK0uB,MAAO1uB,KAAK2nB,WAC7GkJ,EAAgB7wB,KAAKyuB,KAAKe,QAAQsB,aAAa5G,EAAa0D,GAAmB4C,EAAWC,GAChGzwB,KAAKquB,SAAWwC,EAChBA,EAAc1T,aAAatM,MAAMgL,IAC7B7b,KAAKquB,cAAWjiB,EAChBpM,KAAKouB,WAAavS,EAClB7b,KAAKguB,oBAAqB,EAC1BhuB,KAAKgvB,sBAAsB,GAC5BhvB,KAAK+uB,cAAc,GAE9B,CACAiB,eAEI,MAAMnU,EAAM7b,KAAKouB,WACjBpuB,KAAKqwB,eAAc,CAACG,EAAWC,KAC3B,MAAMvG,EAriBlB,SAAkCtjB,EAASkV,EAAUD,EAAK+J,GAmBtD,MACMnF,EAAU7Z,EAAQ6oB,mBAClBvF,EAAc,IAAItB,GAAY/M,EAFrB,QAjBf,SAAiB0N,GACb,MAAM9P,EAASiS,GAAmBnC,EAAK,CAAC,SAAU,UAClD,IAAIwH,EAAa,KACjB,IACIA,EAAaxH,EAAIqC,kBAAkB,8BACvC,CACA,MAAO1rB,GACHkpB,IAAa,EACjB,CACK2H,GAED3H,IAAa,GAEjB,MAAMlE,EAAO6C,OAAOgJ,GAEpB,OADA3H,IAAc4H,MAAM9L,IACb,IAAIqG,GAAsBrG,EAAMU,EAAKV,OAAmB,UAAXzL,EACxD,GAG0DgH,GAG1D,OAFAyJ,EAAYnB,QArBI,CAAE,wBAAyB,SAsB3CmB,EAAYjB,aAAeQ,GAAmB3N,GACvCoO,CACX,CA4gBgC+G,CAAyBjxB,KAAKyuB,KAAKe,QAASxvB,KAAKyuB,KAAKmC,UAAW/U,EAAK7b,KAAK0uB,OACzFwC,EAAgBlxB,KAAKyuB,KAAKe,QAAQsB,aAAa5G,EAAa0D,GAAmB4C,EAAWC,GAChGzwB,KAAKquB,SAAW6C,EAChBA,EAAc/T,aAAatM,MAAK4I,IAE5BzZ,KAAKquB,cAAWjiB,EAChBpM,KAAK8vB,gBAAgBrW,EAAO+R,SAC5BxrB,KAAKguB,oBAAqB,EACtBvU,EAAOgS,YACPzrB,KAAKiuB,sBAAuB,GAEhCjuB,KAAKgvB,sBAAsB,GAC5BhvB,KAAK+uB,cAAc,GAE9B,CACAoB,kBACI,MAAMgB,EAAYtF,GAA8B7rB,KAAKsuB,iBAC/C7U,EAAS,IAAI8R,GAAsBvrB,KAAK+tB,aAAc/tB,KAAK0uB,MAAMxJ,QAEjErJ,EAAM7b,KAAKouB,WACjBpuB,KAAKqwB,eAAc,CAACG,EAAWC,KAC3B,IAAIvG,EACJ,IACIA,EAphBhB,SAAiCpO,EAAUlV,EAASiV,EAAK+J,EAAMuL,EAAW1J,EAAUhO,EAAQyP,GAGxF,MAAM7P,EAAU,IAAIkS,GAAsB,EAAG,GAS7C,GARI9R,GACAJ,EAAQmS,QAAU/R,EAAO+R,QACzBnS,EAAQ6I,MAAQzI,EAAOyI,QAGvB7I,EAAQmS,QAAU,EAClBnS,EAAQ6I,MAAQ0D,EAAKV,QAErBU,EAAKV,SAAW7L,EAAQ6I,MACxB,MArtDG,IAAI9I,GAAaO,GAAiByX,uBAAwB,wEAutDjE,MAAMC,EAAYhY,EAAQ6I,MAAQ7I,EAAQmS,QAC1C,IAAI8F,EAAgBD,EAChBF,EAAY,IACZG,EAAgB9P,KAAK+P,IAAID,EAAeH,IAE5C,MAAM1L,EAAYpM,EAAQmS,QACpB9F,EAAUD,EAAY6L,EAC5B,IAAIE,EAAgB,GAEhBA,EADkB,IAAlBF,EACgB,WAEXD,IAAcC,EACH,mBAGA,SAEpB,MAAMvI,EAAU,CACZ,wBAAyByI,EACzB,uBAAwB,GAAGnY,EAAQmS,WAEjCxC,EAAOpD,EAAKlO,MAAM+N,EAAWC,GACnC,GAAa,OAATsD,EACA,MAAM7O,KAmBV,MACMsG,EAAU7Z,EAAQ6oB,mBAClBvF,EAAc,IAAItB,GAAY/M,EAFrB,QAjBf,SAAiB0N,EAAKC,GAKlB,MAAMiI,EAAe/F,GAAmBnC,EAAK,CAAC,SAAU,UAClDmI,EAAarY,EAAQmS,QAAU8F,EAC/BpM,EAAOU,EAAKV,OAClB,IAAI+B,EAOJ,OALIA,EADiB,UAAjBwK,EACWnI,GAAgB1iB,EAAS6gB,EAAzB6B,CAAmCC,EAAKC,GAGxC,KAER,IAAI+B,GAAsBmG,EAAYxM,EAAuB,UAAjBuM,EAA0BxK,EACjF,GAG0DxG,GAK1D,OAJAyJ,EAAYnB,QAAUA,EACtBmB,EAAYlB,KAAOA,EAAKrC,aACxBuD,EAAYhB,iBAAmBA,GAAoB,KACnDgB,EAAYjB,aAAeQ,GAAmB3N,GACvCoO,CACX,CAmd8ByH,CAAwB3xB,KAAKyuB,KAAKmC,UAAW5wB,KAAKyuB,KAAKe,QAAS3T,EAAK7b,KAAK0uB,MAAOyC,EAAWnxB,KAAK2uB,UAAWlV,EAAQzZ,KAAK4vB,wBAC3I,CACA,MAAO1vB,GAGH,OAFAF,KAAKmuB,OAASjuB,OACdF,KAAKqvB,YAAY,QAErB,CACA,MAAMuC,EAAgB5xB,KAAKyuB,KAAKe,QAAQsB,aAAa5G,EAAa0D,GAAmB4C,EAAWC,GACrF,GAEXzwB,KAAKquB,SAAWuD,EAChBA,EAAczU,aAAatM,MAAMghB,IAC7B7xB,KAAK8xB,sBACL9xB,KAAKquB,cAAWjiB,EAChBpM,KAAK8vB,gBAAgB+B,EAAUrG,SAC3BqG,EAAUpG,WACVzrB,KAAK2nB,UAAYkK,EAAU5K,SAC3BjnB,KAAKqvB,YAAY,YAGjBrvB,KAAKgvB,sBACT,GACDhvB,KAAK+uB,cAAc,GAE9B,CACA+C,sBACwBjG,GAA8B7rB,KAAKsuB,iBAErC,EAAI,WAClBtuB,KAAKsuB,kBAAoB,EAEjC,CACA2B,iBACIjwB,KAAKqwB,eAAc,CAACG,EAAWC,KAC3B,MAAMvG,EAAcH,GAAc/pB,KAAKyuB,KAAKe,QAASxvB,KAAKyuB,KAAKmC,UAAW5wB,KAAK2uB,WACzEoD,EAAkB/xB,KAAKyuB,KAAKe,QAAQsB,aAAa5G,EAAa0D,GAAmB4C,EAAWC,GAClGzwB,KAAKquB,SAAW0D,EAChBA,EAAgB5U,aAAatM,MAAKoW,IAC9BjnB,KAAKquB,cAAWjiB,EAChBpM,KAAK2nB,UAAYV,EACjBjnB,KAAKqvB,YAAY,UAA0C,GAC5DrvB,KAAKsvB,sBAAsB,GAEtC,CACAc,iBACIpwB,KAAKqwB,eAAc,CAACG,EAAWC,KAC3B,MAAMvG,EArtBlB,SAAyBtjB,EAASkV,EAAU2L,EAAU7B,EAAMqB,GACxD,MAAM/I,EAAUpC,EAASR,sBACnByN,EAAU,CACZ,yBAA0B,aASxBiJ,EAPN,WACI,IAAI3xB,EAAM,GACV,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAGA,IACnBH,GAAYmhB,KAAKC,SAAS9D,WAAWjG,MAAM,GAE/C,OAAOrX,CACX,CACiB4xB,GACjBlJ,EAAQ,gBAAkB,+BAAiCiJ,EAC3D,MAAME,EAAY9G,GAAmBtP,EAAU8J,EAAMqB,GAE/CkL,EAAc,KAChBH,EADgB,4DADGvJ,GAAiByJ,EAAWzK,GAM/C,SACAuK,EANgB,qBAShBE,EAAuB,YACvB,WACEE,EAAe,SAAWJ,EAAW,KACrChJ,EAAOhE,GAAQ1B,QAAQ6O,EAAavM,EAAMwM,GAChD,GAAa,OAATpJ,EACA,MAAM7O,KAEV,MAAM2O,EAAY,CAAEhlB,KAAMouB,EAAoB,UACxCrW,EAAMoC,GAAQC,EAAStX,EAAQ6U,KAAM7U,EAAQojB,WAE7CvJ,EAAU7Z,EAAQ6oB,mBAClBvF,EAAc,IAAItB,GAAY/M,EAFrB,OAEkCyN,GAAgB1iB,EAAS6gB,GAAWhH,GAKrF,OAJAyJ,EAAYpB,UAAYA,EACxBoB,EAAYnB,QAAUA,EACtBmB,EAAYlB,KAAOA,EAAKrC,aACxBuD,EAAYjB,aAAeQ,GAAmB3N,GACvCoO,CACX,CA2qBgCmI,CAAgBryB,KAAKyuB,KAAKe,QAASxvB,KAAKyuB,KAAKmC,UAAW5wB,KAAK2uB,UAAW3uB,KAAK0uB,MAAO1uB,KAAK2nB,WACvG2K,EAAmBtyB,KAAKyuB,KAAKe,QAAQsB,aAAa5G,EAAa0D,GAAmB4C,EAAWC,GACnGzwB,KAAKquB,SAAWiE,EAChBA,EAAiBnV,aAAatM,MAAKoW,IAC/BjnB,KAAKquB,cAAWjiB,EAChBpM,KAAK2nB,UAAYV,EACjBjnB,KAAK8vB,gBAAgB9vB,KAAK0uB,MAAMxJ,QAChCllB,KAAKqvB,YAAY,UAA0C,GAC5DrvB,KAAK+uB,cAAc,GAE9B,CACAe,gBAAgByC,GACZ,MAAMC,EAAMxyB,KAAK+tB,aACjB/tB,KAAK+tB,aAAewE,EAIhBvyB,KAAK+tB,eAAiByE,GACtBxyB,KAAKyyB,kBAEb,CACApD,YAAYlD,GACR,GAAInsB,KAAK8uB,SAAW3C,EAGpB,OAAQA,GACJ,IAAK,YACL,IAAK,UAIDnsB,KAAK8uB,OAAS3C,OACQ/f,IAAlBpM,KAAKquB,SACLruB,KAAKquB,SAASjR,SAETpd,KAAKkwB,iBACV5O,aAAathB,KAAKkwB,gBAClBlwB,KAAKkwB,oBAAiB9jB,EACtBpM,KAAKgvB,wBAET,MACJ,IAAK,UAID,MAAM0D,EAA4B,WAAhB1yB,KAAK8uB,OACvB9uB,KAAK8uB,OAAS3C,EACVuG,IACA1yB,KAAKyyB,mBACLzyB,KAAK2vB,UAET,MACJ,IAAK,SAcL,IAAK,QAQL,IAAK,UAKD3vB,KAAK8uB,OAAS3C,EACdnsB,KAAKyyB,mBACL,MAvBJ,IAAK,WAIDzyB,KAAKmuB,OAASlU,KACdja,KAAK8uB,OAAS3C,EACdnsB,KAAKyyB,mBAmBjB,CACAzD,uBACI,OAAQhvB,KAAK8uB,QACT,IAAK,UACD9uB,KAAKqvB,YAAY,UACjB,MACJ,IAAK,YACDrvB,KAAKqvB,YAAY,YACjB,MACJ,IAAK,UACDrvB,KAAK2vB,SAGjB,CAIIgD,eACA,MAAMC,EAAgB1G,GAA+BlsB,KAAK8uB,QAC1D,MAAO,CACH+D,iBAAkB7yB,KAAK+tB,aACvB+E,WAAY9yB,KAAK0uB,MAAMxJ,OACvBiH,MAAOyG,EACP3L,SAAUjnB,KAAK2nB,UACfoL,KAAM/yB,KACN8tB,IAAK9tB,KAAKyuB,KAElB,CAkBAuE,GAAG1qB,EAAM+jB,EAAgBnnB,EAAO+tB,GAE5B,MAAM1G,EAAW,IAAIH,GAASC,QAAkBjgB,EAAWlH,QAASkH,EAAW6mB,QAAa7mB,GAE5F,OADApM,KAAKkzB,aAAa3G,GACX,KACHvsB,KAAKmzB,gBAAgB5G,EAAS,CAEtC,CAOA1b,KAAKuiB,EAAaC,GAGd,OAAOrzB,KAAK0vB,SAAS7e,KAAKuiB,EAAaC,EAC3C,CAIAptB,MAAMotB,GACF,OAAOrzB,KAAK6Q,KAAK,KAAMwiB,EAC3B,CAIAH,aAAa3G,GACTvsB,KAAKkuB,WAAW1rB,KAAK+pB,GACrBvsB,KAAKszB,gBAAgB/G,EACzB,CAIA4G,gBAAgB5G,GACZ,MAAM/rB,EAAIR,KAAKkuB,WAAWzP,QAAQ8N,IACvB,IAAP/rB,GACAR,KAAKkuB,WAAWqF,OAAO/yB,EAAG,EAElC,CACAiyB,mBACIzyB,KAAKwzB,iBACaxzB,KAAKkuB,WAAWxW,QACxB+O,SAAQ8F,IACdvsB,KAAKszB,gBAAgB/G,EAAS,GAEtC,CACAiH,iBACI,QAAsBpnB,IAAlBpM,KAAKuuB,SAAwB,CAC7B,IAAIkF,GAAY,EAChB,OAAQvH,GAA+BlsB,KAAK8uB,SACxC,KAAKhD,GAAUG,QACX,GAAMjsB,KAAKuuB,SAASmF,KAAK,KAAM1zB,KAAK2yB,UAApC,GACA,MACJ,KAAK7G,GAAU5R,SACf,KAAK4R,GAAU5e,MAEX,GADelN,KAAKwuB,QACPkF,KAAK,KAAM1zB,KAAKmuB,QAA7B,GACA,MACJ,QACIsF,GAAY,EAGhBA,IACAzzB,KAAKuuB,cAAWniB,EAChBpM,KAAKwuB,aAAUpiB,EAEvB,CACJ,CACAknB,gBAAgB/G,GAEZ,OADsBL,GAA+BlsB,KAAK8uB,SAEtD,KAAKhD,GAAUC,QACf,KAAKD,GAAUE,OACPO,EAASD,MACT,GAAMC,EAASD,KAAKoH,KAAKnH,EAAUvsB,KAAK2yB,UAAxC,GAEJ,MACJ,KAAK7G,GAAUG,QACPM,EAASrc,UACT,GAAMqc,EAASrc,SAASwjB,KAAKnH,GAA7B,GAEJ,MACJ,KAAKT,GAAU5R,SACf,KAAK4R,GAAU5e,MAKf,QAEQqf,EAASrnB,OACT,GAAMqnB,EAASrnB,MAAMwuB,KAAKnH,EAAUvsB,KAAKmuB,QAAzC,GAGhB,CAKAwF,SACI,MAAMC,EAAwB,WAAhB5zB,KAAK8uB,QACC,YAAhB9uB,KAAK8uB,OAIT,OAHI8E,GACA5zB,KAAKqvB,YAAY,WAEduE,CACX,CAKAC,QACI,MAAMD,EAAwB,YAAhB5zB,KAAK8uB,OAInB,OAHI8E,GACA5zB,KAAKqvB,YAAY,WAEduE,CACX,CAMAxW,SACI,MAAMwW,EAAwB,YAAhB5zB,KAAK8uB,QACC,YAAhB9uB,KAAK8uB,OAIT,OAHI8E,GACA5zB,KAAKqvB,YAAY,aAEduE,CACX,EA+BJ,MAAME,GACFnwB,YAAYowB,EAAUjY,GAClB9b,KAAK+zB,SAAWA,EAEZ/zB,KAAK4wB,UADL9U,aAAoBhB,GACHgB,EAGAhB,GAASa,YAAYG,EAAUiY,EAAStY,KAEjE,CAMAkC,WACI,MAAO,QAAU3d,KAAK4wB,UAAU7V,OAAS,IAAM/a,KAAK4wB,UAAU5V,IAClE,CACAgZ,QAAQptB,EAASkV,GACb,OAAO,IAAIgY,GAAUltB,EAASkV,EAClC,CAIImY,WACA,MAAMnY,EAAW,IAAIhB,GAAS9a,KAAK4wB,UAAU7V,OAAQ,IACrD,OAAO/a,KAAKg0B,QAAQh0B,KAAK+zB,SAAUjY,EACvC,CAIIf,aACA,OAAO/a,KAAK4wB,UAAU7V,MAC1B,CAII6M,eACA,OAAO5nB,KAAK4wB,UAAU5V,IAC1B,CAKIlX,WACA,OAAOgjB,GAAc9mB,KAAK4wB,UAAU5V,KACxC,CAIIwU,cACA,OAAOxvB,KAAK+zB,QAChB,CAKIG,aACA,MAAMC,EA5/Cd,SAAgBnZ,GACZ,GAAoB,IAAhBA,EAAKva,OACL,OAAO,KAEX,MAAMgR,EAAQuJ,EAAK+L,YAAY,KAC/B,OAAe,IAAXtV,EACO,GAEKuJ,EAAKtD,MAAM,EAAGjG,EAElC,CAk/CwB,CAAOzR,KAAK4wB,UAAU5V,MACtC,GAAgB,OAAZmZ,EACA,OAAO,KAEX,MAAMrY,EAAW,IAAIhB,GAAS9a,KAAK4wB,UAAU7V,OAAQoZ,GACrD,OAAO,IAAIL,GAAU9zB,KAAK+zB,SAAUjY,EACxC,CAIAsY,aAAatwB,GACT,GAA4B,KAAxB9D,KAAK4wB,UAAU5V,KACf,MA7lFZ,SAA8BlX,GAC1B,OAAO,IAAIsV,GAAaO,GAAiB0a,uBAAwB,kBAC7DvwB,EAD6D,kHAIrE,CAwlFkBwwB,CAAqBxwB,EAEnC,EAsGJ,SAASywB,GAAUzG,GACf,MAAM0G,EAAc,CAChB7J,SAAU,GACVC,MAAO,IAEX,OAAO6J,GAAc3G,EAAK0G,GAAa3jB,MAAK,IAAM2jB,GACtD,CAOAxpB,eAAeypB,GAAc3G,EAAK0G,EAAahK,GAC3C,MAAMkK,EAAM,CAERlK,aAEEmK,QA6BV,SAAgB7G,EAAKvjB,GACF,MAAXA,GACkC,iBAAvBA,EAAQkgB,YACf5M,GAAe,qBACC,EACA,IAAMtT,EAAQkgB,YAGtC,MAAMmK,EAAKrqB,GAAW,CAAC,EACjB2f,EAAcI,GAAOwD,EAAI0B,QAAS1B,EAAI8C,UAC5B,IAAKgE,EAAGpK,UAAWoK,EAAGnK,YACtC,OAAOqD,EAAI0B,QAAQqF,sBAAsB3K,EAAa0D,GAC1D,CAzC2BkH,CAAOhH,EAAK4G,GACnCF,EAAY7J,SAASnoB,QAAQmyB,EAAShK,UACtC6J,EAAY5J,MAAMpoB,QAAQmyB,EAAS/J,OACL,MAA1B+J,EAAS9J,qBACH4J,GAAc3G,EAAK0G,EAAaG,EAAS9J,cAEvD,CA0IA,SAASkK,GAAYjH,EAAK9S,GACtB,GAAI8S,aAAekH,GAAqB,CACpC,MAAMpuB,EAAUknB,EAChB,GAAuB,MAAnBlnB,EAAQquB,QACR,MA14FD,IAAI7b,GAAaO,GAAiBub,kBAAmB,6CAExD/b,GACA,yCAy4FA,MAAM4R,EAAY,IAAI+I,GAAUltB,EAASA,EAAQquB,SACjD,OAAY,MAARja,EACO+Z,GAAYhK,EAAW/P,GAGvB+P,CAEf,CAGI,YAAa3e,IAAT4O,EAnDZ,SAAqB8S,EAAKqH,GACtB,MAAMhB,EAruDV,SAAenZ,EAAMma,GACjB,MAAMC,EAAqBD,EACtBE,MAAM,KACNhqB,QAAOjC,GAAaA,EAAU3I,OAAS,IACvCgC,KAAK,KACV,OAAoB,IAAhBuY,EAAKva,OACE20B,EAGApa,EAAO,IAAMoa,CAE5B,CA0tDoBE,CAAMxH,EAAI8C,UAAU5V,KAAMma,GACpCrZ,EAAW,IAAIhB,GAASgT,EAAI8C,UAAU7V,OAAQoZ,GACpD,OAAO,IAAIL,GAAUhG,EAAI0B,QAAS1T,EACtC,CAgDmByZ,CAAYzH,EAAK9S,GAGjB8S,CAGnB,CAcA,SAAS0H,GAAc/Z,EAAMjW,GACzB,MAAMgW,EAAehW,aAAuC,EAASA,EAAO2T,IAC5E,OAAoB,MAAhBqC,EACO,KAEJV,GAAS2a,mBAAmBja,EAAcC,EACrD,CAkBA,MAAMuZ,GACFrxB,YAIAyP,EAAKsiB,EAILC,EAIAC,EAAMC,GACF71B,KAAKoT,IAAMA,EACXpT,KAAK01B,cAAgBA,EACrB11B,KAAK21B,kBAAoBA,EACzB31B,KAAK41B,KAAOA,EACZ51B,KAAK61B,iBAAmBA,EACxB71B,KAAKi1B,QAAU,KAMfj1B,KAAK81B,MAAQ5c,GACblZ,KAAKgqB,UAAY,QACjBhqB,KAAK+1B,OAAS,KACd/1B,KAAKg2B,UAAW,EAChBh2B,KAAKi2B,uBA1nG4B,KA2nGjCj2B,KAAKk2B,oBArnGyB,IAsnG9Bl2B,KAAKm2B,UAAY,IAAIpqB,IAEjB/L,KAAKi1B,QADG,MAARW,EACe9a,GAAS2a,mBAAmBG,EAAM51B,KAAK81B,OAGvCN,GAAcx1B,KAAK81B,MAAO91B,KAAKoT,IAAI7I,QAE1D,CAKIkR,WACA,OAAOzb,KAAK81B,KAChB,CACIra,SAAKA,GACLzb,KAAK81B,MAAQra,EACI,MAAbzb,KAAK41B,KACL51B,KAAKi1B,QAAUna,GAAS2a,mBAAmBz1B,KAAK41B,KAAMna,GAGtDzb,KAAKi1B,QAAUO,GAAc/Z,EAAMzb,KAAKoT,IAAI7I,QAEpD,CAIIklB,yBACA,OAAOzvB,KAAKk2B,mBAChB,CACIzG,uBAAmB2G,GACnBvY,GAAe,OACA,EACCkK,OAAOsO,kBAAmBD,GAC1Cp2B,KAAKk2B,oBAAsBE,CAC/B,CAKInM,4BACA,OAAOjqB,KAAKi2B,sBAChB,CACIhM,0BAAsBmM,GACtBvY,GAAe,OACA,EACCkK,OAAOsO,kBAAmBD,GAC1Cp2B,KAAKi2B,uBAAyBG,CAClC,CACAprB,sBACI,GAAIhL,KAAKs2B,mBACL,OAAOt2B,KAAKs2B,mBAEhB,MAAMC,EAAOv2B,KAAK01B,cAAcprB,aAAa,CAAEE,UAAU,IACzD,GAAI+rB,EAAM,CACN,MAAMC,QAAkBD,EAAKE,WAC7B,GAAkB,OAAdD,EACA,OAAOA,EAAUE,WAEzB,CACA,OAAO,IACX,CACA1rB,0BACI,MAAM2rB,EAAW32B,KAAK21B,kBAAkBrrB,aAAa,CAAEE,UAAU,IACjE,OAAImsB,SACqBA,EAASF,YAKhBG,MAEX,IACX,CAIAprB,UAMI,OALKxL,KAAKg2B,WACNh2B,KAAKg2B,UAAW,EAChBh2B,KAAKm2B,UAAU1P,SAAQ/V,GAAWA,EAAQ0M,WAC1Cpd,KAAKm2B,UAAUU,SAEZhxB,QAAQF,SACnB,CAKA2iB,sBAAsBnM,GAClB,OAAO,IAAI2X,GAAU9zB,KAAMmc,EAC/B,CAKA2U,aAAa5G,EAAa4M,EAAgBtG,EAAWC,EAAelR,GAAQ,GACxE,GAAKvf,KAAKg2B,SAQN,OAAO,IAAI/Y,GAAY1C,MARP,CAChB,MAAM7J,EAz7ElB,SAAqBwZ,EAAa5T,EAAOka,EAAWC,EAAeqG,EAAgBC,EAAiBxX,GAAQ,GACxG,MAAMyX,EA3QV,SAAyBC,GACrB,MAAM7b,EAASC,mBACf,IAAI2b,EAAY,IAChB,IAAK,MAAM5vB,KAAO6vB,EACVA,EAAO9J,eAAe/lB,KAEtB4vB,EAAYA,GADK5b,EAAOhU,GAAO,KAAMgU,EAAO6b,EAAO7vB,IAChB,KAK3C,OADA4vB,EAAYA,EAAUtf,MAAM,GAAI,GACzBsf,CACX,CA+PsBE,CAAgBhN,EAAYpB,WACxCjN,EAAMqO,EAAYrO,IAAMmb,EACxBjO,EAAUziB,OAAOqN,OAAO,CAAC,EAAGuW,EAAYnB,SAK9C,OAlBJ,SAAyBA,EAASzS,GAC1BA,IACAyS,EAAQ,oBAAsBzS,EAEtC,CAUI6gB,CAAgBpO,EAASzS,GAvB7B,SAAwByS,EAASyH,GACX,OAAdA,GAAsBA,EAAU/vB,OAAS,IACzCsoB,EAAuB,cAAI,YAAcyH,EAEjD,CAoBI4G,CAAerO,EAASyH,GAnB5B,SAA2BzH,EAASgO,GAChChO,EAAQ,8BACJ,UAAYgO,QAAyDA,EAAkB,aAC/F,CAiBIM,CAAkBtO,EAASgO,GAX/B,SAA4BhO,EAAS0H,GACX,OAAlBA,IACA1H,EAAQ,uBAAyB0H,EAEzC,CAQI6G,CAAmBvO,EAAS0H,GACrB,IAAI9R,GAAe9C,EAAKqO,EAAYrc,OAAQkb,EAASmB,EAAYlB,KAAMkB,EAAYf,aAAce,EAAY5L,qBAAsB4L,EAAYrB,QAASqB,EAAYjB,aAAciB,EAAYzJ,QAASyJ,EAAYhB,iBAAkB4N,EAAgBvX,EAChQ,CAg7E4BgY,CAAYrN,EAAalqB,KAAK+1B,OAAQvF,EAAWC,EAAeqG,EAAgB92B,KAAK61B,iBAAkBtW,GAIvH,OAHAvf,KAAKm2B,UAAUnqB,IAAI0E,GAEnBA,EAAQyM,aAAatM,MAAK,IAAM7Q,KAAKm2B,UAAUprB,OAAO2F,KAAU,IAAM1Q,KAAKm2B,UAAUprB,OAAO2F,KACrFA,CACX,CAIJ,CACA1F,4BAA4Bkf,EAAa4M,GACrC,MAAOtG,EAAWC,SAAuB5qB,QAAQuF,IAAI,CACjDpL,KAAKswB,gBACLtwB,KAAKuwB,sBAET,OAAOvwB,KAAK8wB,aAAa5G,EAAa4M,EAAgBtG,EAAWC,GAAetT,YACpF,EAGJ,MAAM,GAAO,oBACP,GAAU,SAqBVqa,GAAe,UAmFrB,SAASC,GAAY3J,GAEjB,OA3ZJ,SAAuBA,GACnBA,EAAIsG,aAAa,eACjB,MAAMlK,EAAcH,GAAc+D,EAAI0B,QAAS1B,EAAI8C,UAAWpJ,MAC9D,OAAOsG,EAAI0B,QAAQqF,sBAAsB3K,EAAa0D,GAC1D,CAuZW8J,CADP5J,EAAM,EAAmBA,GAE7B,CA2DA,SAAS6J,GAAQ7J,GAEb,OAAOyG,GADPzG,EAAM,EAAmBA,GAE7B,CAsBA,SAASA,GAAI8J,EAAcC,GAEvB,OA3XJ,SAAeD,EAAcC,GACzB,GAAIA,GArCG,kBAAkBC,KAqCFD,GAAY,CAC/B,GAAID,aAAwB5C,GACxB,OAjCD,IAAIlB,GAiCe8D,EAAcC,GAGhC,MAAMxd,GAAgB,2EAE9B,CAEI,OAAO0a,GAAY6C,EAAcC,EAEzC,CA+WWE,CADPH,EAAe,EAAmBA,GACPC,EAC/B,CAeA,SAASG,GAAW5kB,EF/gGpB,SAAgBtP,EAAO,GACnB,MAAMsP,EAAMH,EAAMvJ,IAAI5F,GACtB,IAAKsP,GAAOtP,IAAS,EACjB,OAAOsQ,IAEX,IAAKhB,EACD,MAAMG,EAAc5M,OAAO,SAAgC,CAAEwN,QAASrQ,IAE1E,OAAOsP,CACX,CEsgG0B6kB,GAAUC,GAEhC,MACMC,EF1uGV,SAAsB/kB,EAAKtP,GACvB,MAAMs0B,EAAsBhlB,EAAIjK,UAC3BsD,YAAY,aACZnC,aAAa,CAAEE,UAAU,IAI9B,OAHI4tB,GACKA,EAAoBC,mBAEtBjlB,EAAIjK,UAAUsD,YAAY3I,EACrC,CEiuG4Bw0B,CADxBllB,EAAM,EAAmBA,GACiBokB,IACFltB,aAAa,CACjDX,WAAYuuB,IAEVK,EP16FgC,CAACC,IACvC,MAAM/c,EARqB,CAAC+c,IAAkB,IAAIjzB,EAAIkzB,EAAI,OAA6F,QAArFA,EAA8B,QAAxBlzB,EAAKpB,WAAkC,IAAPoB,OAAgB,EAASA,EAAGmzB,qBAAkC,IAAPD,OAAgB,EAASA,EAAGD,EAAY,EAQ1LG,CAAuBH,GACpC,IAAK/c,EACD,OAEJ,MAAMmd,EAAiBnd,EAAKsL,YAAY,KACxC,GAAI6R,GAAkB,GAAKA,EAAiB,IAAMnd,EAAKhb,OACnD,MAAM,IAAIkB,MAAM,gBAAgB8Z,yCAGpC,MAAMod,EAAOC,SAASrd,EAAKrD,UAAUwgB,EAAiB,GAAI,IAC1D,MAAgB,MAAZnd,EAAK,GAEE,CAACA,EAAKrD,UAAU,EAAGwgB,EAAiB,GAAIC,GAGxC,CAACpd,EAAKrD,UAAU,EAAGwgB,GAAiBC,EAC/C,EOy5FiBE,CAAkC,WAInD,OAHIR,GAeR,SAAgC/I,EAAS/T,EAAMod,EAAMtuB,EAAU,CAAC,IA7YhE,SAAkCilB,EAAS/T,EAAMod,EAAMtuB,EAAU,CAAC,GAC9DilB,EAAQ/T,KAAO,GAAGA,KAAQod,IAC1BrJ,EAAQxF,UAAY,OACpB,MAAM,cAAEgP,GAAkBzuB,EACtByuB,IACAxJ,EAAQ8G,mBACqB,iBAAlB0C,EACDA,EP98ElB,SAA6BpC,EAAOqC,GAChC,GAAIrC,EAAMsC,IACN,MAAM,IAAIv3B,MAAM,gHAGpB,MAIMw3B,EAAUF,GAAa,eACvBG,EAAMxC,EAAMwC,KAAO,EACnBC,EAAMzC,EAAMyC,KAAOzC,EAAM0C,QAC/B,IAAKD,EACD,MAAM,IAAI13B,MAAM,wDAEpB,MAAM43B,EAAUjzB,OAAOqN,OAAO,CAE1B6lB,IAAK,kCAAkCL,IAAWM,IAAKN,EAASC,MAAKM,IAAKN,EAAM,KAAMO,UAAWP,EAAKC,MAAKC,QAASD,EAAKO,SAAU,CAC/HC,iBAAkB,SAClBC,WAAY,CAAC,IACZlD,GAGT,MAAO,CACH7yB,EAA8BW,KAAKyT,UAnBxB,CACX4hB,IAAK,OACLzxB,KAAM,SAkBNvE,EAA8BW,KAAKyT,UAAUohB,IAH/B,IAKhB92B,KAAK,IACX,COm7EkBu3B,CAAoBhB,EAAexJ,EAAQpc,IAAI7I,QAAQ0uB,WAEzE,CAoYIgB,CAAyBzK,EAAS/T,EAAMod,EAAMtuB,EAClD,CAhBQ2vB,CAAuB/B,KAAoBI,GAExCJ,CACX,CA+EI9kB,EAAmB,IAAIjL,EAAUovB,IAPrC,SAAiBruB,GAAakB,mBAAoBwR,IAC9C,MAAMzI,EAAMjK,EAAUsD,YAAY,OAAOnC,eACnC6vB,EAAehxB,EAAUsD,YAAY,iBACrC2tB,EAAmBjxB,EAAUsD,YAAY,sBAC/C,OAAO,IAAIuoB,GAAoB5hB,EAAK+mB,EAAcC,EAAkBve,EF/7GxD,SEg8GhB,GAE4D,UAAqChT,sBAAqB,IAElH2L,GAAgB,GAAM,GAAS,IAE/BA,GAAgB,GAAM,GAAS,WClkHnCrU,OAAOiQ,iBAAiB,oBAAoB,KAC3C,MAAMiqB,EAAWx1B,SAASy1B,cAAc,kBACvCC,EAAU11B,SAASy1B,cAAc,oBACjCE,EAAO31B,SAASy1B,cAAc,SAC9B7M,EAAS5oB,SAASy1B,cAAc,WAChCG,EAAO51B,SAASy1B,cAAc,QAC9BI,EAAS71B,SAASy1B,cAAc,WAChCpG,EAASrvB,SAASy1B,cAAc,iBAChCK,EAAW91B,SAASy1B,cAAc,gBAClCM,EAAe/1B,SAASg2B,iBAAiB,mBACzCC,EAAYj2B,SAASg2B,iBAAiB,gBACtCE,EAASl2B,SAASy1B,cAAc,WAChCnxB,EAAYtE,SAASy1B,cAAc,cACnCp1B,EAAQL,SAASy1B,cAAc,UAC/B3hB,EAAQ9T,SAASy1B,cAAc,iBAC/BU,EAAYn2B,SAASy1B,cAAc,iBAY9BlnB,EAAMgB,EATW,CACtB6mB,OAAQ,0CACRC,WAAY,oCACZjC,UAAW,oBACXkC,cAAe,gCACfC,kBAAmB,eACnB9kB,MAAO,8CAKFkZ,EAAUwI,KACVqD,EAAUvN,GAAI0B,EAAS,UAoC7B,SAAS8L,EAAQC,GAAgB,QAAAC,EAAA33B,UAAApD,OAAN+M,EAAI,IAAA/L,MAAA+5B,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJjuB,EAAIiuB,EAAA,GAAA53B,UAAA43B,GAC9BjuB,EAAKiZ,SAAQuE,GAAQA,EAAK0Q,UAAUC,OAAOJ,IAC5C,CAWA,SAASK,EAAWC,EAAUC,GAC7B,IACCR,EAAQ,OAAQP,EAAQL,GACxB,MAEMqB,ED4xGT,SAA8BjO,EAAK/mB,EAAMkgB,GAErC,OA7fJ,SAAgC6G,EAAK/mB,EAAMkgB,GAEvC,OADA6G,EAAIsG,aAAa,wBACV,IAAIvG,GAAWC,EAAK,IAAI9I,GAAQje,GAAOkgB,EAClD,CA0fW+U,CADPlO,EAAM,EAAmBA,GACU/mB,EAAMkgB,EAC7C,CC/xGsBgV,CADAnO,GADHkK,GAAW5kB,GACM,SAAQyoB,KACWC,GAEpDI,EADaC,EAAQN,GACPO,OAAQP,EAAU,GAAI3H,EAAQ,GAAI,GAAI,QACpD6H,EAAW/I,GAAG,iBAAkBL,IAChC,MAAM0J,EAAUx3B,SAASg2B,iBAAiB,oBAAoB,GAC3DyB,EAAWz3B,SAASy1B,cAAc,aAClCiC,EAAW13B,SAASg2B,iBAAiB,iBAAiB,GACtD2B,EAAa33B,SAASg2B,iBAAiB,iBAAiB,GACxD4B,EAAU53B,SAASy1B,cAAc,kBACjCoC,EAAM73B,SAASy1B,cAAc,QAChC,GAA4B,IAAxB3H,EAASG,WAAkB,CAC9B,IAAI6J,EAAanb,KAAKob,MAAOjK,EAASE,iBAAmBF,EAASG,WAAc,KAChFuJ,EAAQQ,UAAYF,EAAa,IACjCL,EAASQ,MAAMC,MAAQJ,EAAa,IACjCA,GAAc,MAChBxb,YAAW,KACVma,EAAQ,OAAQe,EAASE,EAAUE,GACnCC,EAAIhB,UAAU1vB,IAAI,QAClBwwB,EAAWQ,YAAc,UAAU,GACjC,KACArK,EAASG,WAAa,IAAI,EAC5ByJ,EAASS,YAAe,GAAExb,KAAKyb,MAAMtK,EAASG,WAAW,UAChDH,EAASG,WAAa,IAAI,EACnCyJ,EAASS,YAAe,GAAExb,KAAKyb,MAAMtK,EAASG,WAAW,aAEzDyJ,EAASS,YAAe,GAAExb,KAAKyb,MAAMtK,EAASG,WAAW,MAAM,OAGlE,IAED,CAAE,MAAO5yB,GACRo7B,EAAQ,OAAQp2B,EAAOiE,EACxB,CAED,CAEA,SAASgzB,EAAQr4B,GAAgB,IAC5Bs4B,EACAG,EAFkBrX,EAAIrhB,UAAApD,OAAA,QAAA2L,IAAAvI,UAAA,GAAAA,UAAA,GAAG,GAG7B,QAAQ,GACP,KAAKC,EAAKo5B,SAAS,QACnB,KAAKp5B,EAAKo5B,SAAS,QACnB,KAAKp5B,EAAKo5B,SAAS,QACjBd,EAAS,uBACT,MACF,KAAKt4B,EAAKo5B,SAAS,QACjBd,EAAS,uBACT,MACF,KAAKt4B,EAAKo5B,SAAS,SACjBd,EAAS,wBACT,MACF,KAAKt4B,EAAKo5B,SAAS,QACnB,KAAKp5B,EAAKo5B,SAAS,SACjBd,EAAS,uBACT,MACF,QACEA,EAAS,0BAEZ,QAAQ,GACP,KAAKlX,EAAO,IAAI,EACdqX,EAAY,GAAE/a,KAAKyb,MAAM/X,EAAK,UAC9B,MACF,KAAKA,EAAO,IAAI,EACdqX,EAAY,GAAE/a,KAAKyb,MAAM/X,EAAM,aAC/B,MACF,KAAKA,EAAO,IAAI,GACdqX,EAAY,GAAE/a,KAAKyb,MAAM/X,EAAM,MAAM,OACrC,MACF,QACEqX,EAAY,GAAE/a,KAAKyb,MAAM/X,MAE5B,MAAO,CAACkX,SAAQG,WACjB,CAEA,SAASL,EAASE,EAAQt4B,EAAMy4B,EAAUrI,EAAQkC,GAA2B,IAArB+G,EAAIt5B,UAAApD,OAAA,QAAA2L,IAAAvI,UAAA,GAAAA,UAAA,GAAC,GAAIu5B,EAAQv5B,UAAApD,OAAA,QAAA2L,IAAAvI,UAAA,GAAAA,UAAA,GAAC,GACzE,MAAMw5B,EAAUx4B,SAASy4B,cAAc,OACvCD,EAAQ3B,UAAU1vB,IAAI,gBACtBqxB,EAAQR,UAAa,mGAGNT,+GAGiBt4B,kDACAsyB,gFAGF+G,qDACKA,qKAILC,MAAab,kDACVY,6JAKjCjJ,EAAOqJ,QAAQF,EAChB,CAxJA1F,GAAQ0D,GACNxqB,MAAM2sB,IACN,MAAMC,EAAe,GAKrB,OAJAD,EAAI5S,MAAMnE,SAASiX,IAClB,MAAMC,EAAY7P,GAAI0B,EAAU,SAAQkO,EAAQ55B,QAChD25B,EAAaj7B,KAAKi1B,GAAYkG,GAAW,IAEnC93B,QAAQuF,IAAIqyB,EAAa,IAEhC5sB,MAAM4sB,IACNA,EAAa3tB,MAAK,CAACtI,EAAGC,IAAMkG,KAAKhJ,MAAM6C,EAAEo2B,aAAejwB,KAAKhJ,MAAM8C,EAAEm2B,eACrEH,EAAahX,SAAQ,CAACQ,EAAUzmB,KAC/B,GAAGA,GAAMi9B,EAAah9B,OAAS,GAAMD,EAAGi9B,EAAah9B,OAAO,CAC3D,MAAMo9B,EAAa5W,EAAS2W,YACtBlwB,EAAM,IAAIC,KACVmJ,EAAO,IAAInJ,KAAKA,KAAKhJ,MAAMk5B,IAC3BC,EAAOtc,KAAKob,OAAOlvB,EAAMoJ,GAAQ,KACvC,IAAIsf,EAEHA,EADG0H,EAAO,GACF,GAAEA,SACAA,EAAO,KACT,GAAEtc,KAAKob,MAAMkB,EAAO,WAEpB,GAAEtc,KAAKob,MAAMkB,EAAO,aAE7B,MAAM/2B,EAAOo1B,EAAQlV,EAASnjB,KAAMmjB,EAAS/B,MAC7CgX,EAASn1B,EAAKq1B,OAAQnV,EAASnjB,KAAMiD,EAAKw1B,SAAUrI,EAAQkC,EAAM,OACnE,IAEC,IAEHnwB,OAAOf,IACPD,QAAQ6N,IAAI5N,EAAM,IAOnB81B,EAAU+C,SAAWtP,IAAc,IAAb,OAAC9f,GAAO8f,EAC7B,MAAMuP,EAAOrvB,EAAOsvB,MAAM,GACtBD,GAGHpC,EAFiBoC,EAAKl6B,KACLk6B,EAElB,EA8GD3D,EAASjqB,iBAAiB,SAAS,IAAIkrB,EAAQ,OAAQd,EAAM/M,KAC7D8M,EAAQnqB,iBAAiB,SAAS,IAAIkrB,EAAQ,OAAQd,EAAM/M,KAE5DgN,EAAKrqB,iBAAiB,SAAS,KAC9B4qB,EAAUkD,OAAO,IAElBvD,EAASvqB,iBAAiB,SAAS,KAClC8jB,EAAO2I,UAAY,GACnBlF,GAAQ0D,GACNxqB,MAAM2sB,IACN,MAAMC,EAAe,GAKrB,OAJAD,EAAI5S,MAAMnE,SAASiX,IAClB,MAAMC,EAAY7P,GAAI0B,EAAU,SAAQkO,EAAQ55B,QAChD25B,EAAaj7B,KAAKi1B,GAAYkG,GAAW,IAEnC93B,QAAQuF,IAAIqyB,EAAa,IAEhC5sB,MAAM4sB,IACNA,EAAa3tB,MAAK,CAACtI,EAAGC,IAAMkG,KAAKhJ,MAAM6C,EAAEo2B,aAAejwB,KAAKhJ,MAAM8C,EAAEm2B,eACrEH,EAAahX,SAAQ,CAACQ,EAAUzmB,KAC9B,MAAMq9B,EAAa5W,EAAS2W,YACtBlwB,EAAM,IAAIC,KACVmJ,EAAO,IAAInJ,KAAKA,KAAKhJ,MAAMk5B,IAC3BC,EAAOtc,KAAKob,OAAOlvB,EAAMoJ,GAAQ,KACvC,IAAIsf,EAEHA,EADG0H,EAAO,GACF,GAAEA,YACAA,EAAO,KACT,GAAEtc,KAAKob,MAAMkB,EAAO,YAEpB,GAAEtc,KAAKob,MAAMkB,EAAO,cAE7B,MAAM/2B,EAAOo1B,EAAQlV,EAASnjB,KAAMmjB,EAAS/B,MAC7CgX,EAASn1B,EAAKq1B,OAAQnV,EAASnjB,KAAMiD,EAAKw1B,SAAUrI,EAAQkC,EAAM,OAAO,GACzE,IAEJuE,EAASmC,MAAMqB,WAAa,QAAQ,IAGrCrD,EAAU,GAAG1qB,iBAAiB,SAAS,KACtCkrB,EAAQ,OAAQP,EAAQL,EAAO,IAEhCE,EAAa,GAAGxqB,iBAAiB,SAAS,KACzCkrB,EAAQ,OAAQP,EAAQL,EAAO,IAEhC/hB,EAAMvI,iBAAiB,SAAS,KAC/BkrB,EAAQ,OAAQp2B,EAAOiE,EAAU,IAGlCsxB,EAAKrqB,iBAAiB,YAAalQ,IAClCA,EAAEk+B,gBAAgB,IAEnB3D,EAAKrqB,iBAAiB,QAASlQ,IAC9BA,EAAEk+B,iBACF,MAAMJ,EAAO99B,EAAEm+B,aAAaJ,MAAM,GAC9BD,GAGHpC,EAFiBoC,EAAKl6B,KACLk6B,EAElB,GACC","sources":["webpack://task2/webpack/bootstrap","webpack://task2/webpack/runtime/global","webpack://task2/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://task2/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://task2/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://task2/./node_modules/idb/build/wrap-idb-value.js","webpack://task2/./node_modules/idb/build/index.js","webpack://task2/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://task2/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://task2/./node_modules/@firebase/storage/dist/index.esm2017.js","webpack://task2/./src/assets/js/script.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.9\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.21.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        return db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        return tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.21.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { _getProvider, getApp, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, isNode, createMockUserToken, getModularInstance, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * 1 second\r\n */\r\nconst DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nclass StorageError extends FirebaseError {\r\n    /**\r\n     * @param code - A `StorageErrorCode` string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     * @param status_ - Corresponding HTTP Status Code\r\n     */\r\n    constructor(code, message, status_ = 0) {\r\n        super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\r\n        this.status_ = status_;\r\n        /**\r\n         * Stores custom error data unique to the `StorageError`.\r\n         */\r\n        this.customData = { serverResponse: null };\r\n        this._baseMessage = this.message;\r\n        // Without this, `instanceof StorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(this, StorageError.prototype);\r\n    }\r\n    get status() {\r\n        return this.status_;\r\n    }\r\n    set status(status) {\r\n        this.status_ = status;\r\n    }\r\n    /**\r\n     * Compares a `StorageErrorCode` against this error's code, filtering out the prefix.\r\n     */\r\n    _codeEquals(code) {\r\n        return prependCode(code) === this.code;\r\n    }\r\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\r\n    get serverResponse() {\r\n        return this.customData.serverResponse;\r\n    }\r\n    set serverResponse(serverResponse) {\r\n        this.customData.serverResponse = serverResponse;\r\n        if (this.customData.serverResponse) {\r\n            this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\r\n        }\r\n        else {\r\n            this.message = this._baseMessage;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @public\r\n * Error codes that can be attached to `StorageError` objects.\r\n */\r\nvar StorageErrorCode;\r\n(function (StorageErrorCode) {\r\n    // Shared between all platforms\r\n    StorageErrorCode[\"UNKNOWN\"] = \"unknown\";\r\n    StorageErrorCode[\"OBJECT_NOT_FOUND\"] = \"object-not-found\";\r\n    StorageErrorCode[\"BUCKET_NOT_FOUND\"] = \"bucket-not-found\";\r\n    StorageErrorCode[\"PROJECT_NOT_FOUND\"] = \"project-not-found\";\r\n    StorageErrorCode[\"QUOTA_EXCEEDED\"] = \"quota-exceeded\";\r\n    StorageErrorCode[\"UNAUTHENTICATED\"] = \"unauthenticated\";\r\n    StorageErrorCode[\"UNAUTHORIZED\"] = \"unauthorized\";\r\n    StorageErrorCode[\"UNAUTHORIZED_APP\"] = \"unauthorized-app\";\r\n    StorageErrorCode[\"RETRY_LIMIT_EXCEEDED\"] = \"retry-limit-exceeded\";\r\n    StorageErrorCode[\"INVALID_CHECKSUM\"] = \"invalid-checksum\";\r\n    StorageErrorCode[\"CANCELED\"] = \"canceled\";\r\n    // JS specific\r\n    StorageErrorCode[\"INVALID_EVENT_NAME\"] = \"invalid-event-name\";\r\n    StorageErrorCode[\"INVALID_URL\"] = \"invalid-url\";\r\n    StorageErrorCode[\"INVALID_DEFAULT_BUCKET\"] = \"invalid-default-bucket\";\r\n    StorageErrorCode[\"NO_DEFAULT_BUCKET\"] = \"no-default-bucket\";\r\n    StorageErrorCode[\"CANNOT_SLICE_BLOB\"] = \"cannot-slice-blob\";\r\n    StorageErrorCode[\"SERVER_FILE_WRONG_SIZE\"] = \"server-file-wrong-size\";\r\n    StorageErrorCode[\"NO_DOWNLOAD_URL\"] = \"no-download-url\";\r\n    StorageErrorCode[\"INVALID_ARGUMENT\"] = \"invalid-argument\";\r\n    StorageErrorCode[\"INVALID_ARGUMENT_COUNT\"] = \"invalid-argument-count\";\r\n    StorageErrorCode[\"APP_DELETED\"] = \"app-deleted\";\r\n    StorageErrorCode[\"INVALID_ROOT_OPERATION\"] = \"invalid-root-operation\";\r\n    StorageErrorCode[\"INVALID_FORMAT\"] = \"invalid-format\";\r\n    StorageErrorCode[\"INTERNAL_ERROR\"] = \"internal-error\";\r\n    StorageErrorCode[\"UNSUPPORTED_ENVIRONMENT\"] = \"unsupported-environment\";\r\n})(StorageErrorCode || (StorageErrorCode = {}));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    const message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new StorageError(StorageErrorCode.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new StorageError(StorageErrorCode.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new StorageError(StorageErrorCode.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    const message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new StorageError(StorageErrorCode.UNAUTHORIZED_APP, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new StorageError(StorageErrorCode.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new StorageError(StorageErrorCode.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new StorageError(StorageErrorCode.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new StorageError(StorageErrorCode.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new StorageError(StorageErrorCode.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new StorageError(StorageErrorCode.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new StorageError(StorageErrorCode.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new StorageError(StorageErrorCode.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new StorageError(StorageErrorCode.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction missingPolyFill(polyFill) {\r\n    return new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction invalidArgument(message) {\r\n    return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\r\n}\r\nfunction appDeleted() {\r\n    return new StorageError(StorageErrorCode.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new StorageError(StorageErrorCode.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new StorageError(StorageErrorCode.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new StorageError(StorageErrorCode.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nclass Location {\r\n    constructor(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    get path() {\r\n        return this.path_;\r\n    }\r\n    get isRoot() {\r\n        return this.path.length === 0;\r\n    }\r\n    fullServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    }\r\n    bucketOnlyServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    }\r\n    static makeFromBucketSpec(bucketString, host) {\r\n        let bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    }\r\n    static makeFromUrl(url, host) {\r\n        let location = null;\r\n        const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        const gsPath = '(/(.*))?$';\r\n        const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        const gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        const version = 'v[A-Za-z0-9_]+';\r\n        const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        const firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\r\n        const firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        const cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        const cloudStoragePath = '([^?#]*)';\r\n        const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\r\n        const cloudStorageIndices = { bucket: 1, path: 2 };\r\n        const groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const group = groups[i];\r\n            const captures = group.regex.exec(url);\r\n            if (captures) {\r\n                const bucketValue = captures[group.indices.bucket];\r\n                let pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    }\r\n}\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nclass FailRequest {\r\n    constructor(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(_appDelete = false) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Accepts a callback for an action to perform (`doRequest`),\r\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\r\n * The callback sent to start requires an argument to call (`onRequestComplete`).\r\n * When `start` calls `doRequest`, it passes a callback for when the request has\r\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\r\n * another call to `doRequest` and the above loop continues until the timeout\r\n * is hit, or a successful response occurs.\r\n * @description\r\n * @param doRequest Callback to perform request\r\n * @param backoffCompleteCb Callback to call when backoff has been completed\r\n */\r\nfunction start(doRequest, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nbackoffCompleteCb, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    let waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let retryTimeoutId = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let globalTimeoutId = null;\r\n    let hitTimeout = false;\r\n    let cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    let triggeredCallback = false;\r\n    function triggerCallback(...args) {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            backoffCompleteCb.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        retryTimeoutId = setTimeout(() => {\r\n            retryTimeoutId = null;\r\n            doRequest(responseHandler, canceled());\r\n        }, millis);\r\n    }\r\n    function clearGlobalTimeout() {\r\n        if (globalTimeoutId) {\r\n            clearTimeout(globalTimeoutId);\r\n        }\r\n    }\r\n    function responseHandler(success, ...args) {\r\n        if (triggeredCallback) {\r\n            clearGlobalTimeout();\r\n            return;\r\n        }\r\n        if (success) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        const mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        let waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    let stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        clearGlobalTimeout();\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (retryTimeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(retryTimeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    globalTimeoutId = setTimeout(() => {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\r\n    // PR: https://github.com/node-fetch/node-fetch/pull/1664\r\n    return typeof Blob !== 'undefined' && !isNode();\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host, protocol) {\r\n    let origin = host;\r\n    if (protocol == null) {\r\n        origin = `https://${host}`;\r\n    }\r\n    return `${protocol}://${origin}/v0${urlPart}`;\r\n}\r\nfunction makeQueryString(params) {\r\n    const encode = encodeURIComponent;\r\n    let queryPart = '?';\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            const nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks the status code to see if the action should be retried.\r\n *\r\n * @param status Current HTTP status code returned by server.\r\n * @param additionalRetryCodes additional retry codes to check against\r\n */\r\nfunction isRetryStatusCode(status, additionalRetryCodes) {\r\n    // The codes for which to retry came from this page:\r\n    // https://cloud.google.com/storage/docs/exponential-backoff\r\n    const isFiveHundredCode = status >= 500 && status < 600;\r\n    const extraRetryCodes = [\r\n        // Request Timeout: web server didn't receive full request in time.\r\n        408,\r\n        // Too Many Requests: you're getting rate-limited, basically.\r\n        429\r\n    ];\r\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n    const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\r\n    return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\r\nclass NetworkRequest {\r\n    constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_, retry = true) {\r\n        this.url_ = url_;\r\n        this.method_ = method_;\r\n        this.headers_ = headers_;\r\n        this.body_ = body_;\r\n        this.successCodes_ = successCodes_;\r\n        this.additionalRetryCodes_ = additionalRetryCodes_;\r\n        this.callback_ = callback_;\r\n        this.errorCallback_ = errorCallback_;\r\n        this.timeout_ = timeout_;\r\n        this.progressCallback_ = progressCallback_;\r\n        this.connectionFactory_ = connectionFactory_;\r\n        this.retry = retry;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.promise_ = new Promise((resolve, reject) => {\r\n            this.resolve_ = resolve;\r\n            this.reject_ = reject;\r\n            this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    start_() {\r\n        const doTheRequest = (backoffCallback, canceled) => {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            const connection = this.connectionFactory_();\r\n            this.pendingConnection_ = connection;\r\n            const progressListener = progressEvent => {\r\n                const loaded = progressEvent.loaded;\r\n                const total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (this.progressCallback_ !== null) {\r\n                    this.progressCallback_(loaded, total);\r\n                }\r\n            };\r\n            if (this.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(this.url_, this.method_, this.body_, this.headers_)\r\n                .then(() => {\r\n                if (this.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                this.pendingConnection_ = null;\r\n                const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                const status = connection.getStatus();\r\n                if (!hitServer ||\r\n                    (isRetryStatusCode(status, this.additionalRetryCodes_) &&\r\n                        this.retry)) {\r\n                    const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                const successCode = this.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        };\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        const backoffDone = (requestWentThrough, status) => {\r\n            const resolve = this.resolve_;\r\n            const reject = this.reject_;\r\n            const connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    const result = this.callback_(connection, connection.getResponse());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    const err = unknown();\r\n                    err.serverResponse = connection.getErrorText();\r\n                    if (this.errorCallback_) {\r\n                        reject(this.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        const err = this.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        const err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nclass RequestEndStatus {\r\n    constructor(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n}\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion, retry = true) {\r\n    const queryPart = makeQueryString(requestInfo.urlParams);\r\n    const url = requestInfo.url + queryPart;\r\n    const headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory, retry);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob$1(...args) {\r\n    const BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        const bb = new BlobBuilder();\r\n        for (let i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    if (typeof atob === 'undefined') {\r\n        throw missingPolyFill('base-64');\r\n    }\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nconst StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nclass StringData {\r\n    constructor(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    const b = [];\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        const hi = c;\r\n                        const lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    let decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            const hasMinus = value.indexOf('-') !== -1;\r\n            const hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                const invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            const hasPlus = value.indexOf('+') !== -1;\r\n            const hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                const invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    let bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        if (e.message.includes('polyfill')) {\r\n            throw e;\r\n        }\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    const array = new Uint8Array(bytes.length);\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nclass DataURLParts {\r\n    constructor(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        const matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        const middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n}\r\nfunction dataURLBytes_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    const longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nclass FbsBlob {\r\n    constructor(data, elideCopy) {\r\n        let size = 0;\r\n        let blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    size() {\r\n        return this.size_;\r\n    }\r\n    type() {\r\n        return this.type_;\r\n    }\r\n    slice(startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            const realBlob = this.data_;\r\n            const sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    }\r\n    static getBlob(...args) {\r\n        if (isNativeBlobDefined()) {\r\n            const blobby = args.map((val) => {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob$1.apply(null, blobby));\r\n        }\r\n        else {\r\n            const uint8Arrays = args.map((val) => {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            let finalLength = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                finalLength += array.byteLength;\r\n            });\r\n            const merged = new Uint8Array(finalLength);\r\n            let index = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    merged[index++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged, true);\r\n        }\r\n    }\r\n    uploadData() {\r\n        return this.data_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    let obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    const index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    const newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    const canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(component => component.length > 0)\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    const index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nclass Mapping {\r\n    constructor(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n}\r\nlet mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    const mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    const nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    const sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    const metadata = {};\r\n    metadata['type'] = 'file';\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    const tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    const encode = encodeURIComponent;\r\n    const tokensList = tokens.split(',');\r\n    const urls = tokensList.map((token) => {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        const base = makeUrl(urlPart, host, protocol);\r\n        const queryString = makeQueryString({\r\n            alt: 'media',\r\n            token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    const resource = {};\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PREFIXES_KEY = 'prefixes';\r\nconst ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    const listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (const path of resource[PREFIXES_KEY]) {\r\n            const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (const item of resource[ITEMS_KEY]) {\r\n            const reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\r\nclass RequestInfo {\r\n    constructor(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        const listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        let newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getErrorText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.status = xhr.getStatus();\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    const shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        let newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    const urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    if (maxDownloadSizeBytes !== undefined) {\r\n        requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\r\n        requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\r\n    }\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'PATCH';\r\n    const body = toResourceString(metadata, mappings);\r\n    const headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'DELETE';\r\n    const timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    const metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        let str = '';\r\n        for (let i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    const boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    const metadata_ = metadataForUpload_(location, blob, metadata);\r\n    const metadataString = toResourceString(metadata_, mappings);\r\n    const preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    const postBlobPart = '\\r\\n--' + boundary + '--';\r\n    const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    const urlParams = { name: metadata_['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nclass ResumableUploadStatus {\r\n    constructor(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n}\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    let status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    const allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    const urlParams = { name: metadataForUpload['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    const body = toResourceString(metadataForUpload, mappings);\r\n    const timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        let url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    const headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        const status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        let sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        const size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    const status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    const bytesLeft = status_.total - status_.current;\r\n    let bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    const startByte = status_.current;\r\n    const endByte = startByte + bytesToUpload;\r\n    let uploadCommand = '';\r\n    if (bytesToUpload === 0) {\r\n        uploadCommand = 'finalize';\r\n    }\r\n    else if (bytesLeft === bytesToUpload) {\r\n        uploadCommand = 'upload, finalize';\r\n    }\r\n    else {\r\n        uploadCommand = 'upload';\r\n    }\r\n    const headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': `${status_.current}`\r\n    };\r\n    const body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        const newCurrent = status_.current + bytesToUpload;\r\n        const size = blob.size();\r\n        let metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\r\nconst TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n// type keys = keyof TaskState\r\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\r\nconst TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* InternalTaskState.RUNNING */:\r\n        case \"pausing\" /* InternalTaskState.PAUSING */:\r\n        case \"canceling\" /* InternalTaskState.CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* InternalTaskState.PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* InternalTaskState.SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* InternalTaskState.CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* InternalTaskState.ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Observer {\r\n    constructor(nextOrObserver, error, complete) {\r\n        const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error !== null && error !== void 0 ? error : undefined;\r\n            this.complete = complete !== null && complete !== void 0 ? complete : undefined;\r\n        }\r\n        else {\r\n            const observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return (...argsToForward) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(() => f(...argsToForward));\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An override for the text-based Connection. Used in tests. */\r\nlet textFactoryOverride = null;\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nclass XhrConnection {\r\n    constructor() {\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.initXhr();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(resolve => {\r\n            this.xhr_.addEventListener('abort', () => {\r\n                this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('error', () => {\r\n                this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('load', () => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    send(url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (const key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    }\r\n    getErrorCode() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    }\r\n    getStatus() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    }\r\n    getResponse() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponse() before sending');\r\n        }\r\n        return this.xhr_.response;\r\n    }\r\n    getErrorText() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorText() before sending');\r\n        }\r\n        return this.xhr_.statusText;\r\n    }\r\n    /** Aborts the request. */\r\n    abort() {\r\n        this.xhr_.abort();\r\n    }\r\n    getResponseHeader(header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    }\r\n    addUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    }\r\n    removeUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    }\r\n}\r\nclass XhrTextConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'text';\r\n    }\r\n}\r\nfunction newTextConnection() {\r\n    return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\r\n}\r\nclass XhrBytesConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'arraybuffer';\r\n    }\r\n}\r\nfunction newBytesConnection() {\r\n    return new XhrBytesConnection();\r\n}\r\nclass XhrBlobConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'blob';\r\n    }\r\n}\r\nfunction newBlobConnection() {\r\n    return new XhrBlobConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nclass UploadTask {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    constructor(ref, blob, metadata = null) {\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* InternalTaskState.RUNNING */;\r\n        this._errorHandler = error => {\r\n            this._request = undefined;\r\n            this._chunkMultiplier = 1;\r\n            if (error._codeEquals(StorageErrorCode.CANCELED)) {\r\n                this._needToFetchStatus = true;\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                const backoffExpired = this.isExponentialBackoffExpired();\r\n                if (isRetryStatusCode(error.status, [])) {\r\n                    if (backoffExpired) {\r\n                        error = retryLimitExceeded();\r\n                    }\r\n                    else {\r\n                        this.sleepTime = Math.max(this.sleepTime * 2, DEFAULT_MIN_SLEEP_TIME_MILLIS);\r\n                        this._needToFetchStatus = true;\r\n                        this.completeTransitions_();\r\n                        return;\r\n                    }\r\n                }\r\n                this._error = error;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = error => {\r\n            this._request = undefined;\r\n            if (error._codeEquals(StorageErrorCode.CANCELED)) {\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n            }\r\n        };\r\n        this.sleepTime = 0;\r\n        this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n            this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, () => { });\r\n    }\r\n    isExponentialBackoffExpired() {\r\n        return this.sleepTime > this.maxSleepTime;\r\n    }\r\n    _makeProgressCallback() {\r\n        const sizeBefore = this._transferred;\r\n        return loaded => this._updateProgress(sizeBefore + loaded);\r\n    }\r\n    _shouldDoResumable(blob) {\r\n        return blob.size() > 256 * 1024;\r\n    }\r\n    _start() {\r\n        if (this._state !== \"running\" /* InternalTaskState.RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this.pendingTimeout = setTimeout(() => {\r\n                            this.pendingTimeout = undefined;\r\n                            this._continueUpload();\r\n                        }, this.sleepTime);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    }\r\n    _resolveToken(callback) {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            switch (this._state) {\r\n                case \"running\" /* InternalTaskState.RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* InternalTaskState.CANCELING */:\r\n                    this._transition(\"canceled\" /* InternalTaskState.CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                    this._transition(\"paused\" /* InternalTaskState.PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    // TODO(andysoto): assert false\r\n    _createResumable() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = createRequest;\r\n            createRequest.getPromise().then((url) => {\r\n                this._request = undefined;\r\n                this._uploadUrl = url;\r\n                this._needToFetchStatus = false;\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _fetchStatus() {\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\r\n            const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = statusRequest;\r\n            statusRequest.getPromise().then(status => {\r\n                status = status;\r\n                this._request = undefined;\r\n                this._updateProgress(status.current);\r\n                this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    this._needToFetchMetadata = true;\r\n                }\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _continueUpload() {\r\n        const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        const status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            let requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                this._error = e;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n                return;\r\n            }\r\n            const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken, \r\n            /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\r\n            );\r\n            this._request = uploadRequest;\r\n            uploadRequest.getPromise().then((newStatus) => {\r\n                this._increaseMultiplier();\r\n                this._request = undefined;\r\n                this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    this._metadata = newStatus.metadata;\r\n                    this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n                }\r\n                else {\r\n                    this.completeTransitions_();\r\n                }\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _increaseMultiplier() {\r\n        const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize * 2 < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    }\r\n    _fetchMetadata() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\r\n            const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n            }, this._metadataErrorHandler);\r\n        });\r\n    }\r\n    _oneShotUpload() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._updateProgress(this._blob.size());\r\n                this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _updateProgress(transferred) {\r\n        const old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    }\r\n    _transition(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* InternalTaskState.CANCELING */:\r\n            case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                else if (this.pendingTimeout) {\r\n                    clearTimeout(this.pendingTimeout);\r\n                    this.pendingTimeout = undefined;\r\n                    this.completeTransitions_();\r\n                }\r\n                break;\r\n            case \"running\" /* InternalTaskState.RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                const wasPaused = this._state === \"paused\" /* InternalTaskState.PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* InternalTaskState.PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* InternalTaskState.CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* InternalTaskState.ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* InternalTaskState.SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    }\r\n    completeTransitions_() {\r\n        switch (this._state) {\r\n            case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                this._transition(\"paused\" /* InternalTaskState.PAUSED */);\r\n                break;\r\n            case \"canceling\" /* InternalTaskState.CANCELING */:\r\n                this._transition(\"canceled\" /* InternalTaskState.CANCELED */);\r\n                break;\r\n            case \"running\" /* InternalTaskState.RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * A snapshot of the current task state.\r\n     */\r\n    get snapshot() {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        return {\r\n            bytesTransferred: this._transferred,\r\n            totalBytes: this._blob.size(),\r\n            state: externalState,\r\n            metadata: this._metadata,\r\n            task: this,\r\n            ref: this._ref\r\n        };\r\n    }\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    on(type, nextOrObserver, error, completed) {\r\n        // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\r\n        const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\r\n        this._addObserver(observer);\r\n        return () => {\r\n            this._removeObserver(observer);\r\n        };\r\n    }\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    then(onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    }\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    catch(onRejected) {\r\n        return this.then(null, onRejected);\r\n    }\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    _addObserver(observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    }\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    _removeObserver(observer) {\r\n        const i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    }\r\n    _notifyObservers() {\r\n        this._finishPromise();\r\n        const observers = this._observers.slice();\r\n        observers.forEach(observer => {\r\n            this._notifyObserver(observer);\r\n        });\r\n    }\r\n    _finishPromise() {\r\n        if (this._resolve !== undefined) {\r\n            let triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    const toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    }\r\n    _notifyObserver(observer) {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    resume() {\r\n        const valid = this._state === \"paused\" /* InternalTaskState.PAUSED */ ||\r\n            this._state === \"pausing\" /* InternalTaskState.PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* InternalTaskState.RUNNING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    pause() {\r\n        const valid = this._state === \"running\" /* InternalTaskState.RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* InternalTaskState.PAUSING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    cancel() {\r\n        const valid = this._state === \"running\" /* InternalTaskState.RUNNING */ ||\r\n            this._state === \"pausing\" /* InternalTaskState.PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* InternalTaskState.CANCELING */);\r\n        }\r\n        return valid;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nclass Reference {\r\n    constructor(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    toString() {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    }\r\n    _newRef(service, location) {\r\n        return new Reference(service, location);\r\n    }\r\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\r\n    get root() {\r\n        const location = new Location(this._location.bucket, '');\r\n        return this._newRef(this._service, location);\r\n    }\r\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\r\n    get bucket() {\r\n        return this._location.bucket;\r\n    }\r\n    /**\r\n     * The full path of this object.\r\n     */\r\n    get fullPath() {\r\n        return this._location.path;\r\n    }\r\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\r\n    get name() {\r\n        return lastComponent(this._location.path);\r\n    }\r\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\r\n    get storage() {\r\n        return this._service;\r\n    }\r\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\r\n    get parent() {\r\n        const newPath = parent(this._location.path);\r\n        if (newPath === null) {\r\n            return null;\r\n        }\r\n        const location = new Location(this._location.bucket, newPath);\r\n        return new Reference(this._service, location);\r\n    }\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    _throwIfRoot(name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\r\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBytes');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBytesConnection)\r\n        .then(bytes => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            bytes.slice(0, maxDownloadSizeBytes)\r\n        : bytes);\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\r\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBlob');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBlobConnection)\r\n        .then(blob => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            blob.slice(0, maxDownloadSizeBytes)\r\n        : blob);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytes');\r\n    const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(finalMetadata => {\r\n        return {\r\n            metadata: finalMetadata,\r\n            ref\r\n        };\r\n    });\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\r\n    ref._throwIfRoot('uploadString');\r\n    const data = dataFromString(format, value);\r\n    const metadataClone = Object.assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return uploadBytes$1(ref, data.data, metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    const accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(() => accumulator);\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nasync function listAllHelper(ref, accumulator, pageToken) {\r\n    const opt = {\r\n        // maxResults is 1000 by default.\r\n        pageToken\r\n    };\r\n    const nextPage = await list$1(ref, opt);\r\n    accumulator.prefixes.push(...nextPage.prefixes);\r\n    accumulator.items.push(...nextPage.items);\r\n    if (nextPage.nextPageToken != null) {\r\n        await listAllHelper(ref, accumulator, nextPage.nextPageToken);\r\n    }\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    if (options != null) {\r\n        if (typeof options.maxResults === 'number') {\r\n            validateNumber('options.maxResults', \r\n            /* minValue= */ 1, \r\n            /* maxValue= */ 1000, options.maxResults);\r\n        }\r\n    }\r\n    const op = options || {};\r\n    const requestInfo = list$2(ref.storage, ref._location, \r\n    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    ref._throwIfRoot('getMetadata');\r\n    const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    ref._throwIfRoot('updateMetadata');\r\n    const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref._throwIfRoot('getDownloadURL');\r\n    const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(url => {\r\n        if (url === null) {\r\n            throw noDownloadURL();\r\n        }\r\n        return url;\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    ref._throwIfRoot('deleteObject');\r\n    const requestInfo = deleteObject$2(ref.storage, ref._location);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    const newPath = child(ref._location.path, childPath);\r\n    const location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        const service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        const reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\r\n    storage.host = `${host}:${port}`;\r\n    storage._protocol = 'http';\r\n    const { mockUserToken } = options;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\r\nclass FirebaseStorageImpl {\r\n    constructor(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._protocol = 'https';\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(host) {\r\n        this._host = host;\r\n        if (this._url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\r\n    get maxUploadRetryTime() {\r\n        return this._maxUploadRetryTime;\r\n    }\r\n    set maxUploadRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxUploadRetryTime = time;\r\n    }\r\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\r\n    get maxOperationRetryTime() {\r\n        return this._maxOperationRetryTime;\r\n    }\r\n    set maxOperationRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxOperationRetryTime = time;\r\n    }\r\n    async _getAuthToken() {\r\n        if (this._overrideAuthToken) {\r\n            return this._overrideAuthToken;\r\n        }\r\n        const auth = this._authProvider.getImmediate({ optional: true });\r\n        if (auth) {\r\n            const tokenData = await auth.getToken();\r\n            if (tokenData !== null) {\r\n                return tokenData.accessToken;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async _getAppCheckToken() {\r\n        const appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n        if (appCheck) {\r\n            const result = await appCheck.getToken();\r\n            // TODO: What do we want to do if there is an error getting the token?\r\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    _delete() {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(request => request.cancel());\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    _makeStorageReference(loc) {\r\n        return new Reference(this, loc);\r\n    }\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    _makeRequest(requestInfo, requestFactory, authToken, appCheckToken, retry = true) {\r\n        if (!this._deleted) {\r\n            const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion, retry);\r\n            this._requests.add(request);\r\n            // Request removes itself from set when complete.\r\n            request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    }\r\n    async makeRequestWithTokens(requestInfo, requestFactory) {\r\n        const [authToken, appCheckToken] = await Promise.all([\r\n            this._getAuthToken(),\r\n            this._getAppCheckToken()\r\n        ]);\r\n        return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\r\n    }\r\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.11.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\r\nfunction getBytes(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBytesInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytes$1(ref, data, metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadString$1(ref, value, format, metadata);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\r\nfunction getStorage(app = getApp(), bucketUrl) {\r\n    app = getModularInstance(app);\r\n    const storageProvider = _getProvider(app, STORAGE_TYPE);\r\n    const storageInstance = storageProvider.getImmediate({\r\n        identifier: bucketUrl\r\n    });\r\n    const emulator = getDefaultEmulatorHostnameAndPort('storage');\r\n    if (emulator) {\r\n        connectStorageEmulator(storageInstance, ...emulator);\r\n    }\r\n    return storageInstance;\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options = {}) {\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\r\nfunction getBlob(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBlobInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\r\nfunction getStream(ref, maxDownloadSizeBytes) {\r\n    throw new Error('getStream() is only supported by NodeJS builds');\r\n}\n\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    const app = container.getProvider('app').getImmediate();\r\n    const authProvider = container.getProvider('auth-internal');\r\n    const appCheckProvider = container.getProvider('app-check-internal');\r\n    return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\r\n}\r\nfunction registerStorage() {\r\n    _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\r\n    registerVersion(name, version, '');\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\r\nregisterStorage();\n\nexport { StorageError, StorageErrorCode, StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };\n//# sourceMappingURL=index.esm2017.js.map\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage, ref, uploadBytesResumable, listAll, getMetadata } from \"firebase/storage\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n\tconst startBtn = document.querySelector('.main__setting'),\r\n\t\tbackBtn = document.querySelector('.upload__setting'),\r\n\t\tmain = document.querySelector('.main'),\r\n\t\tupload = document.querySelector('.upload'),\r\n\t\tform = document.querySelector('form'),\r\n\t\trecent = document.querySelector('.recent'),\r\n\t\tparent = document.querySelector('.recent__main'),\r\n\t\tviewMore = document.querySelector('.recent__btn'),\r\n\t\tuploadRecent = document.querySelectorAll('.upload__recent'),\r\n\t\tuploadNew = document.querySelectorAll('.upload__new'),\r\n\t\tfolder = document.querySelector('.folder'),\r\n\t\tcontainer = document.querySelector('.container'),\r\n\t\terror = document.querySelector('.modal'),\r\n\t\tclose = document.querySelector('.modal__close'),\r\n\t\tfileInput = document.querySelector('.upload__file');\r\n\r\n\r\n\tconst firebaseConfig = {\r\n\t\tapiKey: \"AIzaSyA5Nm1FWzpXfIbfpIikEK5bqDTd3bP-huw\",\r\n\t\tauthDomain: \"datastorage-81729.firebaseapp.com\",\r\n\t\tprojectId: \"datastorage-81729\",\r\n\t\tstorageBucket: \"datastorage-81729.appspot.com\",\r\n\t\tmessagingSenderId: \"655552349194\",\r\n\t\tappId: \"1:655552349194:web:83ee71e427c8b0576b4bf3\"\r\n\t};\r\n\r\n\tconst app = initializeApp(firebaseConfig);\r\n\r\n\tconst storage = getStorage();\r\n\tconst listRef = ref(storage, 'files/');\r\n\tlistAll(listRef)\r\n\t\t.then((res) => {\r\n\t\t\tconst metadataList = [];\r\n\t\t\tres.items.forEach((itemRef) => {\r\n\t\t\t\tconst forestRef = ref(storage, `files/${itemRef.name}`);\r\n\t\t\t\tmetadataList.push(getMetadata(forestRef));\r\n\t\t\t});\r\n\t\t\treturn Promise.all(metadataList);\r\n\t\t})\r\n\t\t.then((metadataList) => {\r\n\t\t\tmetadataList.sort((a, b) => Date.parse(a.timeCreated) - Date.parse(b.timeCreated));\r\n\t\t\tmetadataList.forEach((metadata, i) => {\r\n\t\t\t\tif(i >=( metadataList.length - 5) && i< metadataList.length){\r\n\t\t\t\t\tconst uploadTime = metadata.timeCreated;\r\n\t\t\t\t\tconst now = new Date();\r\n\t\t\t\t\tconst date = new Date(Date.parse(uploadTime));\r\n\t\t\t\t\tconst diff = Math.floor((now - date) / 60000);\r\n\t\t\t\t\tlet time;\r\n\t\t\t\t\tif (diff < 60) {\r\n\t\t\t\t\t\ttime = `${diff}m ago`;\r\n\t\t\t\t\t} else if (diff < 1440) {\r\n\t\t\t\t\t\ttime = `${Math.floor(diff / 60)}h ago`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttime = `${Math.floor(diff / 1440)}d ago`;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst data = getData(metadata.name, metadata.size);\r\n\t\t\t\t\tnewFiles(data.extend, metadata.name, data.fileSize, parent, time, 'hide');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t})\r\n\t.catch((error) => {\r\n\t\tconsole.log(error);\r\n  });\r\n\r\n\tfunction getHide(clazz, ...args) {\r\n\t\targs.forEach(item => item.classList.toggle(clazz));\r\n\t}\r\n\r\n\tfileInput.onchange = ({target}) => {\r\n\t\tconst file = target.files[0];\r\n\t\tif (file) {\r\n\t\t\tconst fileName = file.name;\r\n\t\t\tconst fileItem = file;\r\n\t\t\tuploadFile(fileName, fileItem);\r\n\t\t}\r\n\t};\r\n\r\n\tfunction uploadFile(fileName, fileItem) {\r\n\t\ttry{\r\n\t\t\tgetHide('hide', folder, recent);\r\n\t\t\tconst storage = getStorage(app);\r\n\t\t\tconst storageRef = ref(storage, `files/${fileName}`);\r\n\t\t\tconst uploadTask = uploadBytesResumable(storageRef, fileItem);\r\n\t\t\tconst data = getData(fileName);\r\n\t\t\tnewFiles(data.extend, fileName, '', parent, '', '', 'hide');\r\n\t\t\tuploadTask.on('state_changed', (snapshot) => {\r\n\t\t\tconst percent = document.querySelectorAll('.recent__percent')[0],\r\n\t\t\t\t  progress = document.querySelector('.progress'),\r\n\t\t\t\t  fileSize = document.querySelectorAll('.recent__size')[0],\r\n\t\t\t\t  recentTime = document.querySelectorAll('.recent__time')[0],\r\n\t\t\t\t  spinner = document.querySelector('.spinner__item'),\r\n\t\t\t\t  bar = document.querySelector('.bar');\r\n\t\t\tif (snapshot.totalBytes !== 0) {\r\n\t\t\t\tlet percentVal = Math.floor((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n\t\t\t\tpercent.innerHTML = percentVal + '%';\r\n\t\t\t\tprogress.style.width = percentVal + '%';\r\n\t\t\t\tif(percentVal >= 100){\r\n\t\t\t\t\tsetTimeout(()=>{\r\n\t\t\t\t\t\tgetHide('hide', percent, fileSize, spinner);\r\n\t\t\t\t\t\tbar.classList.add('hide');\r\n\t\t\t\t\t\trecentTime.textContent = 'recently';\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t\tif(snapshot.totalBytes < 10**6){\r\n\t\t\t\t\t\tfileSize.textContent = `${Math.round(snapshot.totalBytes/1024)}KB`;\r\n\t\t\t\t\t} else if(snapshot.totalBytes < 10**9) {\r\n\t\t\t\t\t\tfileSize.textContent = `${Math.round(snapshot.totalBytes/1024**2)}MB`;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfileSize.textContent = `${Math.round(snapshot.totalBytes/1024**3)}GB`;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tgetHide('hide', error, container);\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tfunction getData(name, size = ''){\r\n\t\tlet extend;\r\n\t\tlet fileSize;\r\n\t\tswitch (true) {\r\n\t\t\tcase name.endsWith(\".jpg\"):\r\n\t\t\tcase name.endsWith(\".png\"):\r\n\t\t\tcase name.endsWith(\".svg\"):\r\n\t\t\t  extend = './assets/img/img.svg';\r\n\t\t\t  break;\r\n\t\t\tcase name.endsWith(\".pdf\"):\r\n\t\t\t  extend = './assets/img/pdf.svg';\r\n\t\t\t  break;\r\n\t\t\tcase name.endsWith(\".pptx\"):\r\n\t\t\t  extend = './assets/img/pptx.svg';\r\n\t\t\t  break;\r\n\t\t\tcase name.endsWith(\".doc\"):\r\n\t\t\tcase name.endsWith(\".docx\"):\r\n\t\t\t  extend = './assets/img/doc.svg';\r\n\t\t\t  break;\r\n\t\t\tdefault:\r\n\t\t\t  extend = './assets/img/folder.svg';\r\n\t\t}\r\n\t\tswitch (true) {\r\n\t\t\tcase size < 10**6:\r\n\t\t\t  fileSize = `${Math.round(size/1024)}KB`;\r\n\t\t\t  break;\r\n\t\t\tcase size < 10**9:\r\n\t\t\t  fileSize = `${Math.round(size/(1024**2))}MB`;\r\n\t\t\t  break;\r\n\t\t\tcase size < 10**12:\r\n\t\t\t  fileSize = `${Math.round(size/(1024**3))}GB`;\r\n\t\t\t  break;\r\n\t\t\tdefault:\r\n\t\t\t  fileSize = `${Math.round(size)}B`;\r\n\t\t}\r\n\t\treturn {extend, fileSize};\r\n\t}\r\n\r\n\tfunction newFiles(extend, name, fileSize, parent, time, hide='', hideSize=''){\r\n\t\tconst element = document.createElement('div');\r\n\t\telement.classList.add('recent__file');\r\n\t\telement.innerHTML = `\r\n\t\t\t\t<div class=\"recent__left\">\r\n\t\t\t\t\t<div class=\"recent__img\">\r\n\t\t\t\t\t\t<img src=${extend} alt=\"img\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"recent__info\">\r\n\t\t\t\t\t\t<div class=\"recent__name\">${name}</div>\r\n\t\t\t\t\t\t<div class=\"recent__time\">${time}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"spinner__item ${hide}\"></div>\r\n\t\t\t\t<div class=\"loading__scale bar ${hide}\">\r\n\t\t\t\t\t<span class=\"loading progress\" style=\"width: 50%\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"recent__right\">\r\n\t\t\t\t\t<div class=\"recent__size ${hideSize}\">${fileSize}</div>\r\n\t\t\t\t\t<div class=\"recent__percent ${hide}\">50%</div>\r\n\t\t\t\t\t<div class=\"recent__ellipsis\">\r\n\t\t\t\t\t\t<img src=\"./assets/img/ellipsis.svg\" alt=\"Ellipsis\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>`;\r\n\t\tparent.prepend(element);\r\n\t}\r\n\r\n\r\n\tstartBtn.addEventListener('click', ()=>getHide('hide', main, upload));\r\n\tbackBtn.addEventListener('click', ()=>getHide('hide', main, upload));\r\n\t\r\n\tform.addEventListener('click', () => {\r\n\t\tfileInput.click();\r\n\t});\r\n\tviewMore.addEventListener('click', () => {\r\n\t\tparent.innerHTML = '';\r\n\t\tlistAll(listRef)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst metadataList = [];\r\n\t\t\t\tres.items.forEach((itemRef) => {\r\n\t\t\t\t\tconst forestRef = ref(storage, `files/${itemRef.name}`);\r\n\t\t\t\t\tmetadataList.push(getMetadata(forestRef));\r\n\t\t\t\t});\r\n\t\t\t\treturn Promise.all(metadataList);\r\n\t\t\t})\r\n\t\t\t.then((metadataList) => {\r\n\t\t\t\tmetadataList.sort((a, b) => Date.parse(a.timeCreated) - Date.parse(b.timeCreated));\r\n\t\t\t\tmetadataList.forEach((metadata, i) => {\r\n\t\t\t\t\t\tconst uploadTime = metadata.timeCreated;\r\n\t\t\t\t\t\tconst now = new Date();\r\n\t\t\t\t\t\tconst date = new Date(Date.parse(uploadTime));\r\n\t\t\t\t\t\tconst diff = Math.floor((now - date) / 60000);\r\n\t\t\t\t\t\tlet time;\r\n\t\t\t\t\t\tif (diff < 60) {\r\n\t\t\t\t\t\t\ttime = `${diff} min ago`;\r\n\t\t\t\t\t\t} else if (diff < 1440) {\r\n\t\t\t\t\t\t\ttime = `${Math.floor(diff / 60)} h ago`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttime = `${Math.floor(diff / 1440)} d ago`;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst data = getData(metadata.name, metadata.size);\r\n\t\t\t\t\t\tnewFiles(data.extend, metadata.name, data.fileSize, parent, time, 'hide');\r\n\t\t\t\t});\r\n\t\t})\r\n\t\tviewMore.style.visibility = 'hidden';\r\n\t});\r\n\r\n\tuploadNew[1].addEventListener('click', () => {\r\n\t\tgetHide('hide', folder, recent);\r\n\t});\r\n\tuploadRecent[0].addEventListener('click', () => {\r\n\t\tgetHide('hide', folder, recent);\r\n\t});\r\n\tclose.addEventListener('click', () => {\r\n\t\tgetHide('hide', error, container);\r\n\t});\r\n\r\n\tform.addEventListener('dragover', (e) => {\r\n\t\te.preventDefault();\r\n\t});\r\n\tform.addEventListener('drop', (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst file = e.dataTransfer.files[0];\r\n\t\tif (file) {\r\n\t\t\tconst fileName = file.name;\r\n\t\t\tconst fileItem = file;\r\n\t\t\tuploadFile(fileName, fileItem);\r\n\t\t}\r\n\t});\r\n});\r\n\r\n\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","stringToByteArray$1","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","push","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","DecodeBase64StringError","constructor","super","arguments","name","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","getDefaults","self","getGlobal","__FIREBASE_DEFAULTS__","process","env","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","console","error","base64Decode","getDefaultsFromCookie","info","getDefaultAppConfig","_a","config","Deferred","reject","resolve","promise","Promise","wrapCallback","callback","value","catch","FirebaseError","code","message","customData","Object","setPrototypeOf","prototype","captureStackTrace","ErrorFactory","create","service","serviceName","errors","data","fullCode","template","PATTERN","_","key","replaceTemplate","fullMessage","deepEqual","a","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","_delegate","Component","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","getImmediate","options","optional","getComponent","setComponent","isComponentEager","instanceDeferred","entries","clearInstance","delete","async","services","from","values","all","filter","map","INTERNAL","_delete","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","undefined","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","args","logLevel","now","Date","toISOString","method","instanceOfAny","object","constructors","some","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","target","prop","receiver","IDBTransaction","objectStoreNames","objectStore","transformCachableValue","func","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","apply","unwrap","storeNames","tx","call","sort","done","unlisten","removeEventListener","complete","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","success","result","then","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","index","shift","oldTraps","PlatformLoggerServiceImpl","getPlatformInfoString","isVersionServiceProvider","library","version","logString","name$o","version$1","logger","_logLevel","_logHandler","_userLogHandler","val","TypeError","setLogLevel","logHandler","userLogHandler","debug","log","warn","PLATFORM_LOG_STRING","_apps","_components","_addComponent","app","_registerComponent","componentName","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","initializeApp","rawConfig","existingApp","newApp","registerVersion","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","put","computeKey","idbGetError","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","stringify","substring","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","StorageError","status_","prependCode","serverResponse","_baseMessage","status","_codeEquals","StorageErrorCode","ErrorCode","unknown","UNKNOWN","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","canceled","CANCELED","cannotSliceBlob","CANNOT_SLICE_BLOB","invalidArgument","INVALID_ARGUMENT","appDeleted","APP_DELETED","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","Location","bucket","path","path_","isRoot","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","static","bucketString","host","bucketLocation","makeFromUrl","INVALID_DEFAULT_BUCKET","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","INVALID_URL","invalidUrl","FailRequest","promise_","getPromise","cancel","_appDelete","isString","isNativeBlob","isNativeBlobDefined","Blob","forceEnvironment","toString","isNode","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocol","origin","isRetryStatusCode","additionalRetryCodes","isFiveHundredCode","isExtraRetryCode","indexOf","isAdditionalRetryCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","retry","pendingConnection_","backoffId_","canceled_","appDelete_","resolve_","reject_","start_","backoffDone","requestWentThrough","connection","wasSuccessCode","getResponse","err","getErrorText","RequestEndStatus","doRequest","backoffCompleteCb","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","responseHandler","clearGlobalTimeout","clearTimeout","waitMillis","Math","random","stopped","stop","wasTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","wasCanceled","ABORT","successCode","appDelete","abort","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","bb","append","getBlob","UNSUPPORTED_ENVIRONMENT","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","utf8Bytes_","Uint8Array","base64Bytes_","hasMinus","hasUnder","hasPlus","hasSlash","encoded","decodeBase64","array","DataURLParts","dataURL","matches","middle","s","end","rest","FbsBlob","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","buffer","blobby","uint8Arrays","stringData","dataUrl","parts","percentEncodedBytes_","dataURLBytes_","dataFromString","finalLength","forEach","merged","uploadData","jsonObjectOrNull","obj","lastComponent","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResourceString","resourceString","resource","len","mapping","defineProperty","_makeStorageReference","addRef","fromResource","toResourceString","PREFIXES_KEY","ITEMS_KEY","RequestInfo","handler","urlParams","headers","body","errorHandler","progressCallback","successCodes","handlerCheck","cndn","metadataHandler","xhr","text","sharedErrorHandler","newErr","UNAUTHORIZED_APP","UNAUTHENTICATED","QUOTA_EXCEEDED","UNAUTHORIZED","getMetadata$2","_protocol","maxOperationRetryTime","requestInfo","shared","OBJECT_NOT_FOUND","objectErrorHandler","list$2","delimiter","pageToken","maxResults","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromBackendResponse","fromResponseString","listHandler","metadataForUpload_","metadataClone","determineContentType_","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","TaskState","RUNNING","PAUSED","SUCCESS","taskStateFromInternalTaskState","state","Observer","nextOrObserver","next","observer","f","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","NETWORK_ERROR","hasOwnProperty","setRequestHeader","response","statusText","header","listener","upload","XhrTextConnection","responseType","newTextConnection","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","backoffExpired","isExponentialBackoffExpired","sleepTime","max","_transition","_metadataErrorHandler","maxSleepTime","storage","maxUploadRetryTime","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","pendingTimeout","_continueUpload","_oneShotUpload","_resolveToken","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","sizeString","isNaN","getResumableUploadStatus","statusRequest","chunkSize","SERVER_FILE_WRONG_SIZE","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","continueResumableUpload","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","wasPaused","snapshot","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","triggered","bind","resume","valid","pause","Reference","_service","_newRef","root","parent","newPath","_throwIfRoot","INVALID_ROOT_OPERATION","invalidRootOperation","listAll$1","accumulator","listAllHelper","opt","nextPage","op","makeRequestWithTokens","list$1","refFromPath","FirebaseStorageImpl","_bucket","NO_DEFAULT_BUCKET","childPath","canonicalChildPath","split","child","_getChild$1","extractBucket","makeFromBucketSpec","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","_overrideAuthToken","auth","tokenData","getToken","accessToken","appCheck","token","clear","requestFactory","firebaseVersion","queryPart","params","makeQueryString","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","STORAGE_TYPE","getMetadata","getMetadata$1","listAll","serviceOrRef","pathOrUrl","test","ref$1","getStorage","getApp","bucketUrl","storageInstance","heartbeatController","triggerHeartbeat","_getProvider","emulator","productName","_b","emulatorHosts","getDefaultEmulatorHost","separatorIndex","port","parseInt","getDefaultEmulatorHostnameAndPort","mockUserToken","projectId","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","createMockUserToken","connectStorageEmulator$1","connectStorageEmulator","authProvider","appCheckProvider","startBtn","querySelector","backBtn","main","form","recent","viewMore","uploadRecent","querySelectorAll","uploadNew","folder","fileInput","apiKey","authDomain","storageBucket","messagingSenderId","listRef","getHide","clazz","_len","_key","classList","toggle","uploadFile","fileName","fileItem","uploadTask","uploadBytesResumable$1","uploadBytesResumable","newFiles","getData","extend","percent","progress","fileSize","recentTime","spinner","bar","percentVal","floor","innerHTML","style","width","textContent","round","endsWith","hide","hideSize","element","createElement","prepend","res","metadataList","itemRef","forestRef","timeCreated","uploadTime","diff","onchange","file","files","click","visibility","preventDefault","dataTransfer"],"sourceRoot":""}